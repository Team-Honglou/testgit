{"version":3,"file":"themes.service.js","sourceRoot":"","sources":["../../../../.ng_build/theme/services/themes/themes.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AACnD,OAAO,EAAE,QAAQ,EAAE,MAAM,2BAA2B,CAAC;AACrD,OAAO,EAAE,eAAe,EAAE,MAAM,8BAA8B,CAAC;;IAU3D,uBAAoB,QAAyB,EAA4B;QAArD,aAAQ,GAAR,QAAQ,CAAiB;QAA4B,QAAG,GAAH,GAAG;4BAFlD,GAAG;QAGzB,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;KACxC;IAED,gCAAQ,GAAR,UAAS,IAAe;QACpB,EAAE,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC;YAC7B,MAAM,CAAC;SACV;QACD,IAAM,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QAC9C,IAAM,SAAS,GAAG,EAAE,CAAC;QACrB,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAC/C,EAAE,CAAC,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAC3C,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;aACvC;SACJ;QACD,CAAA,KAAA,MAAM,CAAC,SAAS,CAAA,CAAC,MAAM,WAAI,SAAS,EAAE;QACtC,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,WAAS,IAAI,CAAC,WAAW,EAAI,CAAC,CAAC;QACpD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;QACzB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;;KAC1C;IAED,uCAAe,GAAf;QACI,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;KAC5B;;gBA7BJ,UAAU;;;;gBAJF,eAAe;gDAU4B,MAAM,SAAC,QAAQ;;wBAZnE;;SAOa,aAAa","sourcesContent":["import { Injectable, Inject } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/platform-browser';\r\nimport { SettingsService } from '../settings/settings.service';\r\n\r\nexport type ThemeType = 'A' | 'B' | 'C' | 'D' | 'E' | 'F' | 'G' | 'H' | 'I' | 'J';\r\n\r\n@Injectable()\r\nexport class ThemesService {\r\n\r\n    styleTag: any;\r\n    defaultTheme: ThemeType = 'A';\r\n\r\n    constructor(private settings: SettingsService, @Inject(DOCUMENT) private doc: any) {\r\n        this.setTheme(settings.layout.theme);\r\n    }\r\n\r\n    setTheme(name: ThemeType) {\r\n        if (name === this.defaultTheme) {\r\n            return;\r\n        }\r\n        const bodyEl = this.doc.querySelector('body');\r\n        const removeArr = [];\r\n        for (let i = 0; i < bodyEl.classList.length; i++) {\r\n            if (bodyEl.classList[i].startsWith('theme-')) {\r\n                removeArr.push(bodyEl.classList[i]);\r\n            }\r\n        }\r\n        bodyEl.classList.remove(...removeArr);\r\n        bodyEl.classList.add(`theme-${name.toLowerCase()}`);\r\n        this.defaultTheme = name;\r\n        this.settings.setLayout('theme', name);\r\n    }\r\n\r\n    getDefaultTheme() {\r\n        return this.defaultTheme;\r\n    }\r\n\r\n}\r\n"]}