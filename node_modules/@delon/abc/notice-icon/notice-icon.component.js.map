{"version":3,"file":"notice-icon.component.js","sourceRoot":"","sources":["../../../.ng_build/abc/notice-icon/notice-icon.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAgD,MAAM,eAAe,CAAC;AACrH,OAAO,EAAE,oBAAoB,EAAE,qBAAqB,EAAE,MAAM,uBAAuB,CAAC;;;oBAoClD,EAAE;oBAgBjB,KAAK;wBAQD,KAAK;sBAEL,IAAI,YAAY,EAAO;qBACxB,IAAI,YAAY,EAAU;+BAQlB,KAAK;kCAEA,IAAI,YAAY,EAAW;;0BAjCtD,sCAAK;;sBAAK,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;aACjC,UAAU,KAAU;YAChB,IAAI,CAAC,MAAM,GAAG,oBAAoB,CAAC,KAAK,CAAC,CAAC;SAC7C;;;;0BAKG,oCAAG;;sBAAK,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;aAC7B,UAAQ,KAAU;YACd,IAAI,CAAC,IAAI,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;SAC5C;;;;0BAKG,wCAAO;;sBAAK,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC;aACrC,UAAY,KAAU;YAClB,IAAI,CAAC,QAAQ,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;SAChD;;;;0BAQG,+CAAc;;sBAAK,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;aACnD,UAAmB,KAAU;YACzB,IAAI,CAAC,eAAe,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;SACvD;;;;IAKD,6CAAe,GAAf,UAAgB,MAAe;QAC3B,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KACxC;IAED,sCAAQ,GAAR,UAAS,CAAM;QACX,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;KACvB;IAED,qCAAO,GAAP,UAAQ,KAAa;QACjB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC1B;;gBAlFJ,SAAS,SAAC;oBACP,QAAQ,EAAE,aAAa;oBACvB,QAAQ,EAAE,yvCA2BT;oBACD,SAAS,EAAE,CAAE,mBAAmB,CAAE;iBACrC;;;;;yBAEI,KAAK;0BAGL,KAAK;wBAQL,KAAK;4BAQL,KAAK;2BAOL,MAAM;0BACN,MAAM;mCAGN,KAAK;uCAOL,MAAM;;8BA1EX;;SAoCa,mBAAmB","sourcesContent":["import { Component, Input, Output, EventEmitter, HostListener, HostBinding, ViewEncapsulation } from '@angular/core';\r\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\r\nimport { NoticeItem } from './notice-item';\r\n\r\n@Component({\r\n    selector: 'notice-icon',\r\n    template: `\r\n    <nz-badge *ngIf=\"data?.length <= 0\" [nzCount]=\"count\" [nzDot]=\"dot\">\r\n        <ng-template #content>\r\n            <i class=\"anticon anticon-bell\"></i>\r\n        </ng-template>\r\n    </nz-badge>\r\n    <nz-popover *ngIf=\"data?.length > 0\" [nzVisible]=\"popoverVisible\" (nzVisibleChange)=\"onVisibleChange($event)\" nzTrigger=\"click\" nzPlacement=\"bottomRight\" nzOverlayClassName=\"notice-icon-popover\">\r\n        <div nz-popover class=\"item\">\r\n            <nz-badge [nzCount]=\"count\" [nzDot]=\"dot\">\r\n                <ng-template #content>\r\n                    <i class=\"anticon anticon-bell\"></i>\r\n                </ng-template>\r\n            </nz-badge>\r\n        </div>\r\n        <ng-template #nzTemplate>\r\n            <nz-spin [nzSpinning]=\"loading\">\r\n                <nz-tabset>\r\n                    <nz-tab *ngFor=\"let i of data\">\r\n                        <ng-template #nzTabHeading>{{i.title}}</ng-template>\r\n                        <notice-list [data]=\"i\"\r\n                                     (select)=\"onSelect($event)\"\r\n                                     (clear)=\"onClear($event)\"></notice-list>\r\n                    </nz-tab>\r\n                </nz-tabset>\r\n            </nz-spin>\r\n        </ng-template>\r\n    </nz-popover>\r\n    `,\r\n    styleUrls: [ './notice-icon.css' ]\r\n})\r\nexport class NoticeIconComponent {\r\n    @Input() data: NoticeItem[] = [];\r\n\r\n    /** 图标上的消息总数 */\r\n    @Input()\r\n    get count() { return this._count; }\r\n    set count(value: any) {\r\n        this._count = coerceNumberProperty(value);\r\n    }\r\n    private _count: number;\r\n\r\n    /** 图标不展示数字，只有一个小红点 */\r\n    @Input()\r\n    get dot() { return this._dot; }\r\n    set dot(value: any) {\r\n        this._dot = coerceBooleanProperty(value);\r\n    }\r\n    private _dot = false;\r\n\r\n    /** 弹出卡片加载状态 */\r\n    @Input()\r\n    get loading() { return this._loading; }\r\n    set loading(value: any) {\r\n        this._loading = coerceBooleanProperty(value);\r\n    }\r\n    private _loading = false;\r\n\r\n    @Output() select = new EventEmitter<any>();\r\n    @Output() clear = new EventEmitter<string>();\r\n\r\n    /** 手动控制Popover显示 */\r\n    @Input()\r\n    get popoverVisible() { return this._popoverVisible; }\r\n    set popoverVisible(value: any) {\r\n        this._popoverVisible = coerceBooleanProperty(value);\r\n    }\r\n    private _popoverVisible = false;\r\n\r\n    @Output() popupVisibleChange = new EventEmitter<boolean>();\r\n\r\n    onVisibleChange(result: boolean) {\r\n        this.popupVisibleChange.emit(result);\r\n    }\r\n\r\n    onSelect(i: any) {\r\n        this.select.emit(i);\r\n    }\r\n\r\n    onClear(title: string) {\r\n        this.clear.emit(title);\r\n    }\r\n}\r\n"]}