{"version":3,"file":"chart.component.js","sourceRoot":"","sources":["../../../../.ng_build/abc/charts/chart/chart.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAU,UAAU,EAAE,KAAK,EAAa,YAAY,EAAE,MAAM,EAAE,WAAW,EAAE,MAAM,eAAe,CAAC;AAGnH,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAC9C,OAAO,EAAE,mBAAmB,EAAE,MAAM,qCAAqC,CAAC;AAC1E,OAAO,EAAE,oBAAoB,EAAE,MAAM,uBAAuB,CAAC;;IAgCzD,YAAY;IAEZ,wBAAoB,EAAc;QAAd,OAAE,GAAF,EAAE,CAAY;2BAVZ,CAAC;sBAEsB,IAAI,YAAY,EAAc;sBAE9B,IAAI,YAAY,EAAc;uBAE7B,IAAI,YAAY,EAAc;;uBAsB5C,IAAI;KAlBE;0BArBlC,kCAAM;;;sBAAK,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;aACnC,UAAW,KAAU;YACjB,IAAI,CAAC,OAAO,GAAG,oBAAoB,CAAC,KAAK,CAAC,CAAC;SAC9C;;;;0BAIG,sCAAU;2BAAK,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;aAC3C,UAAe,KAAU;YACrB,IAAI,CAAC,WAAW,GAAG,oBAAoB,CAAC,KAAK,CAAC,CAAC;SAClD;;;;IAaO,oCAAW,GAAnB;QACI,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,SAAS,GAAG,EAAE,CAAC;QACrC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;KAC7B;IAED,iCAAQ,GAAR;QAAA,iBAEC;QADG,UAAU,CAAC,cAAM,OAAA,KAAI,CAAC,WAAW,EAAE,EAAlB,CAAkB,EAAE,GAAG,CAAC,CAAC;KAC7C;IAED,oCAAW,GAAX;QACI,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC3B,IAAI,CAAC,oBAAoB,EAAE,CAAC;KAC/B;IAMO,2CAAkB,GAA1B;QAAA,iBAQC;QAPG,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC;YAAC,MAAM,CAAC;QAElD,EAAE,CAAC,CAAC,IAAI,CAAC,UAAU,IAAI,GAAG,CAAC;YAAC,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;QAElD,IAAI,CAAC,OAAO,GAAG,mBAAmB,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC;aACtC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;aACnC,SAAS,CAAC,cAAM,OAAA,KAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAI,CAAC,EAAE,CAAC,EAAzB,CAAyB,CAAC,CAAC;KACnE;IAEO,6CAAoB,GAA5B;QACI,EAAE,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;YAAC,IAAI,CAAC,OAAO,CAAC,WAAW,EAAE,CAAC;KAChD;;gBAhEJ,SAAS,SAAC;oBACP,QAAQ,EAAE,OAAO;oBACjB,QAAQ,EAAE,EAAE;oBACZ,MAAM,EAAE,CAAE,uBAAuB,CAAC;iBACrC;;;;;gBAX2B,UAAU;;;2BAgBjC,WAAW,SAAC,iBAAiB,cAC7B,KAAK;+BAOL,KAAK;2BAOL,MAAM;2BAEN,MAAM;4BAEN,MAAM;;yBAnCX;;SAYa,cAAc","sourcesContent":["import { Component, OnInit, ElementRef, Input, OnDestroy, EventEmitter, Output, HostBinding } from '@angular/core';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { FromEventObservable } from 'rxjs/observable/FromEventObservable';\r\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\r\n\r\n@Component({\r\n    selector: 'chart',\r\n    template: ``,\r\n    styles: [ `:host{display:block} `]\r\n})\r\nexport class ChartComponent implements OnInit, OnDestroy {\r\n\r\n    // region: fields\r\n\r\n    @HostBinding('style.height.px')\r\n    @Input()\r\n    get height() { return this._height; }\r\n    set height(value: any) {\r\n        this._height = coerceNumberProperty(value);\r\n    }\r\n    private _height;\r\n\r\n    @Input()\r\n    get resizeTime() { return this._resizeTime; }\r\n    set resizeTime(value: any) {\r\n        this._resizeTime = coerceNumberProperty(value);\r\n    }\r\n    private _resizeTime = 0;\r\n\r\n    @Output() render: EventEmitter<ElementRef> = new EventEmitter<ElementRef>();\r\n\r\n    @Output() resize: EventEmitter<ElementRef> = new EventEmitter<ElementRef>();\r\n\r\n    @Output() destroy: EventEmitter<ElementRef> = new EventEmitter<ElementRef>();\r\n\r\n    // endregion\r\n\r\n    constructor(private el: ElementRef) {}\r\n\r\n    private renderChart() {\r\n        this.el.nativeElement.innerHTML = '';\r\n        this.render.emit(this.el);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        setTimeout(() => this.renderChart(), 200);\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy.emit(this.el);\r\n        this.uninstallResizeEvent();\r\n    }\r\n\r\n    // region: resize\r\n\r\n    private resize$: Subscription = null;\r\n\r\n    private installResizeEvent() {\r\n        if (this.resizeTime <= 0 || !this.resize$) return;\r\n\r\n        if (this.resizeTime <= 200) this.resizeTime = 200;\r\n\r\n        this.resize$ = FromEventObservable.create(window, 'resize')\r\n                            .pipe(debounceTime(this.resizeTime))\r\n                            .subscribe(() => this.resize.emit(this.el));\r\n    }\r\n\r\n    private uninstallResizeEvent() {\r\n        if (this.resize$) this.resize$.unsubscribe();\r\n    }\r\n\r\n    // endregion\r\n}\r\n"]}