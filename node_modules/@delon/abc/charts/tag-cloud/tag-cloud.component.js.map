{"version":3,"file":"tag-cloud.component.js","sourceRoot":"","sources":["../../../../.ng_build/abc/charts/tag-cloud/tag-cloud.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, HostBinding, ViewChild, ElementRef, OnDestroy, OnChanges, SimpleChanges, NgZone, TemplateRef, OnInit, HostListener, ViewEncapsulation, SimpleChange, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Observable } from 'rxjs/Observable';\nimport { debounceTime } from 'rxjs/operators';\nimport { FromEventObservable } from 'rxjs/observable/FromEventObservable';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\n\n@Component({\n    selector: 'tag-cloud',\n    template: `<div #container [ngStyle]=\"{'height.px': height}\"></div>`,\n    styleUrls: [ './tag-cloud.css' ],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TagCloudComponent implements OnDestroy, OnChanges, OnInit {\n\n    // region: fields\n\n    @Input() color = 'rgba(24, 144, 255, 0.85)';\n\n    @Input()\n    get height() { return this._height; }\n    set height(value: any) {\n        this._height = coerceNumberProperty(value);\n    }\n    private _height = 0;\n\n    @Input() padding = 0;\n    @Input() data: { name: string, value: number, [key: string]: any }[];\n\n    @Input()\n    get autoLabel() { return this._autoLabel; }\n    set autoLabel(value: any) {\n        this._autoLabel = coerceBooleanProperty(value);\n    }\n    private _autoLabel = true;\n\n    // endregion\n\n    @ViewChild('container') node: ElementRef;\n\n    chart: any;\n    initFlag = false;\n\n    constructor(private el: ElementRef, private cd: ChangeDetectorRef) { }\n\n    private initTagCloud() {\n        // 给point注册一个词云的shape\n        G2.Shape.registerShape('point', 'cloud', {\n            drawShape(cfg, container) {\n                const attrs = Object.assign({}, {\n                    fillOpacity: cfg.opacity,\n                    fontSize: cfg.origin._origin.size,\n                    rotate: cfg.origin._origin.rotate,\n                    text: cfg.origin._origin.text,\n                    textAlign: 'center',\n                    fontFamily: cfg.origin._origin.font,\n                    fill: cfg.color,\n                    textBaseline: 'Alphabetic'\n                  }, cfg.style);\n                return container.addShape('text', {\n                    attrs: Object.assign(attrs, {\n                        x: cfg.x,\n                        y: cfg.y\n                    })\n                });\n            }\n        });\n    }\n\n    renderChart() {\n        if (!this.data || (this.data && this.data.length < 1)) return;\n\n        this.node.nativeElement.innerHTML = '';\n        const dv = new DataSet.View().source(this.data);\n        const range = dv.range('value');\n        const min = range[0];\n        const max = range[1];\n        const height = +this.height;\n        const width = +this.el.nativeElement.offsetWidth;\n\n        dv.transform({\n            type: 'tag-cloud',\n            fields: [ 'name', 'value' ],\n            size: [ width, height ],\n            padding: this.padding,\n            timeInterval: 5000, // max execute time\n            rotate() {\n                let random = ~~(Math.random() * 4) % 4;\n                if (random === 2) {\n                    random = 0;\n                }\n                return random * 90; // 0, 90, 270\n            },\n            fontSize(d) {\n                if (d.value) {\n                    return ((d.value - min) / (max - min)) * (80 - 24) + 24;\n                }\n                return 0;\n            }\n        });\n        const chart = new G2.Chart({\n            container: this.node.nativeElement,\n            width: width,\n            height: height,\n            padding: this.padding,\n            forceFit: true\n        });\n        chart.source(dv, {\n            x: { nice: false },\n            y: { nice: false }\n        });\n        chart.legend(false);\n        chart.axis(false);\n        chart.tooltip({\n            showTitle: false\n        });\n        chart.coord().reflect();\n        chart.point()\n            .position('x*y')\n            .color('text')\n            .shape('cloud')\n            .tooltip('value*category');\n\n        chart.render();\n\n        this.chart = chart;\n    }\n\n    uninstall() {\n        if (this.chart) {\n            this.chart.destroy();\n            this.chart = null;\n        }\n    }\n\n    ngOnInit(): void {\n        this.initFlag = true;\n        this.initTagCloud();\n        setTimeout(() => this.renderChart(), 100);\n    }\n\n    ngOnChanges(changes: { [P in keyof this]?: SimpleChange } & SimpleChanges): void {\n        if (this.initFlag)\n            this.renderChart();\n    }\n\n    ngOnDestroy(): void {\n        this.uninstall();\n    }\n}\n"]}