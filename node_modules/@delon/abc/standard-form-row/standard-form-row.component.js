import { Component, Input, ElementRef, Renderer2 } from '@angular/core';
import { coerceBooleanProperty } from '@angular/cdk/coercion';
var StandardFormRowComponent = /** @class */ (function () {
    function StandardFormRowComponent(el, renderer) {
        this.el = el;
        this.renderer = renderer;
        this._classMap = [];
    }
    Object.defineProperty(StandardFormRowComponent.prototype, "block", {
        get: /** 是否整行 */
        function () { return this._block; },
        set: function (value) {
            this._block = coerceBooleanProperty(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StandardFormRowComponent.prototype, "last", {
        get: /** 是否最后一行 */
        function () { return this._last; },
        set: function (value) {
            this._last = coerceBooleanProperty(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StandardFormRowComponent.prototype, "grid", {
        get: /** 是否网格布局 */
        function () { return this._grid; },
        set: function (value) {
            this._grid = coerceBooleanProperty(value);
        },
        enumerable: true,
        configurable: true
    });
    StandardFormRowComponent.prototype.setClass = function () {
        var _this = this;
        this._classMap.forEach(function (cls) { return _this.renderer.removeClass(_this.el.nativeElement, cls); });
        this._classMap = ["standard-form-row"];
        if (this.block)
            this._classMap.push('block');
        if (this.grid)
            this._classMap.push('grid');
        if (this.last)
            this._classMap.push('last');
        this._classMap.forEach(function (v) { return _this.renderer.addClass(_this.el.nativeElement, v); });
    };
    StandardFormRowComponent.prototype.ngOnChanges = function (changes) {
        this.setClass();
    };
    StandardFormRowComponent.decorators = [
        { type: Component, args: [{
                    selector: 'standard-form-row',
                    template: "\n    <div *ngIf=\"title\" class=\"label\"><span>{{title}}</span></div>\n    <div class=\"control\"><ng-content></ng-content></div>\n    ",
                    styles: ["/* stylelint-disable at-rule-empty-line-before,at-rule-name-space-after,at-rule-no-unknown */ /* stylelint-disable declaration-bang-space-before */ /* stylelint-disable declaration-bang-space-before */ :host { border-bottom: 1px dashed #e9e9e9; padding-bottom: 16px; margin-bottom: 16px; display: flex; } :host ::ng-deep .ant-form-item { margin-right: 24px; } :host ::ng-deep .ant-form-item-label label { color: rgba(0, 0, 0, 0.65); margin-right: 0; } :host ::ng-deep .ant-form-item-label { padding: 0; line-height: 32px; } :host ::ng-deep .label { color: rgba(0, 0, 0, 0.85); font-size: 14px; margin-right: 24px; flex: 0 0 auto; text-align: right; } :host ::ng-deep .label > span { display: inline-block; height: 32px; line-height: 32px; } :host ::ng-deep .label > span:after { content: \"\：\"; } :host ::ng-deep .control { flex: 1 1 0; } :host ::ng-deep .control .ant-form-item:last-child { margin-right: 0; } :host.block ::ng-deep .ant-form-item, :host.block ::ng-deep div.ant-form-item-control-wrapper { display: block; } :host.grid ::ng-deep .ant-form-item, :host.grid ::ng-deep div.ant-form-item-control-wrapper { display: block; } :host.grid ::ng-deep .ant-form-item-label { float: left; } :host.last { border: none; padding-bottom: 0; margin-bottom: 0; } "]
                },] },
    ];
    /** @nocollapse */
    StandardFormRowComponent.ctorParameters = function () { return [
        { type: ElementRef, },
        { type: Renderer2, },
    ]; };
    StandardFormRowComponent.propDecorators = {
        "title": [{ type: Input },],
        "block": [{ type: Input },],
        "last": [{ type: Input },],
        "grid": [{ type: Input },],
    };
    return StandardFormRowComponent;
}());
export { StandardFormRowComponent };
//# sourceMappingURL=standard-form-row.component.js.map