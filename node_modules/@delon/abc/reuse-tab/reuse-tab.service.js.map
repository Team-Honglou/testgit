{"version":3,"file":"reuse-tab.service.js","sourceRoot":"","sources":["../../../.ng_build/abc/reuse-tab/reuse-tab.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, OnDestroy, Optional, Injector } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, DetachedRouteHandle, ActivatedRoute } from '@angular/router';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { MenuService } from '@delon/theme';\r\nimport { ReuseTabCached, ReuseTabMatchMode, ReuseTabNotify } from './interface';\r\n\r\n@Injectable()\r\nexport class ReuseTabService implements OnDestroy {\r\n    private _max = 10;\r\n    private _mode = ReuseTabMatchMode.Menu;\r\n    private _excludes: RegExp[] = [ ];\r\n    private _cachedChange: BehaviorSubject<ReuseTabNotify> = new BehaviorSubject<ReuseTabNotify>(null);\r\n    private _cached: ReuseTabCached[] = [];\r\n    private _titleCached: { [url: string]: string } = {};\r\n    private removeBuffer: string;\r\n\r\n    // region: public\r\n\r\n    /** 允许最多复用多少个页面，取值范围 `2-100` */\r\n    set max(value: number) {\r\n        this._max = Math.min(Math.max(value, 2), 100);\r\n        for (let i = this._cached.length; i > this._max; i--) {\r\n            this._cached.pop();\r\n        }\r\n    }\r\n    /** 设置匹配模式 */\r\n    set mode(value: ReuseTabMatchMode) {\r\n        this._mode = value;\r\n    }\r\n    /** 排除规则，限 `mode=URL` */\r\n    set excludes(values: RegExp[]) {\r\n        if (!values) return;\r\n        this._excludes = values;\r\n    }\r\n    /** 获取指定路径缓存所在位置，`-1` 表示无缓存 */\r\n    index(url: string): number {\r\n        return this._cached.findIndex(w => w.url === url);\r\n    }\r\n    /** 获取指定路径缓存是否存在 */\r\n    exists(url: string): boolean {\r\n        return this.index(url) !== -1;\r\n    }\r\n    /** 获取指定路径缓存 */\r\n    get(path: string): ReuseTabCached {\r\n        return path ? this._cached.find(w => w.url === path) || null : null;\r\n    }\r\n\r\n    private destroy(_handle: any) {\r\n        if (_handle && _handle.componentRef && _handle.componentRef.destroy) _handle.componentRef.destroy();\r\n    }\r\n\r\n    /**\r\n     * 移除指定路径缓存\r\n     */\r\n    remove(data: any): boolean {\r\n        let url = data;\r\n        if (typeof data !== 'string') {\r\n            url = data.url;\r\n        }\r\n        this.removeBuffer = url;\r\n        const idx = this.index(url);\r\n        const item = idx !== -1 ? this._cached[idx] : null;\r\n        if (item) {\r\n            this.destroy(item._handle);\r\n            this._cached.splice(idx, 1);\r\n            delete this._titleCached[url];\r\n        }\r\n        this._cachedChange.next({ active: 'remove', item });\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * 清除所有缓存\r\n     */\r\n    clear() {\r\n        this.removeBuffer = null;\r\n        this._cached.forEach(v => this.destroy(v._handle));\r\n        this._cached = [];\r\n        this._titleCached = {};\r\n        this._cachedChange.next({ active: 'clear' });\r\n    }\r\n    /** 获取已缓存的路由 */\r\n    get items() {\r\n        return this._cached;\r\n    }\r\n    /** 获取当前缓存的路由总数 */\r\n    get count() {\r\n        return this._cached.length;\r\n    }\r\n    /** 订阅缓存变更通知 */\r\n    get change(): Observable<ReuseTabNotify> {\r\n        return this._cachedChange.asObservable();\r\n    }\r\n    /** 设置当前页标题 */\r\n    set title(value: string) {\r\n        if (!value) return;\r\n        this._titleCached[this.getUrl(this.injector.get(ActivatedRoute).snapshot)] = value;\r\n        this._cachedChange.next({ active: 'title', title: value });\r\n    }\r\n\r\n    // endregion\r\n\r\n    // region: privates\r\n\r\n    /** @private */\r\n    _clearRemoveBuffer() {\r\n        this.removeBuffer = null;\r\n    }\r\n\r\n    // endregion\r\n\r\n    constructor(private injector: Injector, @Optional() private menuService: MenuService) { }\r\n\r\n    /** @private */\r\n    getTitle(url: string, route?: ActivatedRouteSnapshot): string {\r\n        if (this._titleCached[url]) return this._titleCached[url];\r\n        if (route && route.data && (route.data.reuseTitle || route.data.title))\r\n            return route.data.reuseTitle || route.data.title;\r\n        if (!this.menuService) return url;\r\n\r\n        const list = this.menuService.getPathByUrl(url);\r\n        const item = list.pop();\r\n        return item ? item.text : url;\r\n    }\r\n\r\n    getTruthRoute(route: ActivatedRouteSnapshot) {\r\n        let next = route;\r\n        while (next.firstChild) next = next.firstChild;\r\n        return next;\r\n    }\r\n\r\n    getUrl(route: ActivatedRouteSnapshot): string {\r\n        let next = this.getTruthRoute(route);\r\n        const segments = [];\r\n        while (next) {\r\n            segments.push(next.url.join('/'));\r\n            next = next.parent;\r\n        }\r\n        const url = '/' + segments.filter(i => i).reverse().join('/');\r\n        return url;\r\n    }\r\n\r\n    private getMenu(url: string) {\r\n        const menus = this.menuService ? this.menuService.getPathByUrl(url) : [];\r\n        if (!menus || menus.length === 0) return null;\r\n        return menus.pop();\r\n    }\r\n\r\n    /** @private */\r\n    getClosable(url: string, route?: ActivatedRouteSnapshot): boolean {\r\n        if (route && route.data && typeof route.data.reuseClosable !== 'undefined')\r\n            return route.data.reuseClosable;\r\n\r\n        const menu = this._mode !== ReuseTabMatchMode.URL ? this.getMenu(url) : null;\r\n        if (menu && typeof menu.reuseClosable !== 'undefined')\r\n            return menu.reuseClosable;\r\n\r\n        return true;\r\n    }\r\n\r\n    can(route: ActivatedRouteSnapshot): boolean {\r\n        const url = this.getUrl(route);\r\n        if (url === this.removeBuffer) return false;\r\n\r\n        if (route.data && typeof route.data.reuse === 'boolean') return route.data.reuse;\r\n\r\n        if (this._mode !== ReuseTabMatchMode.URL) {\r\n            const menu = this.getMenu(url);\r\n            if (!menu) return false;\r\n            if (this._mode === ReuseTabMatchMode.Menu) {\r\n                if (menu.reuse === false) return false;\r\n            } else {\r\n                if (!menu.reuse || menu.reuse !== true) return false;\r\n            }\r\n            return true;\r\n        }\r\n        let idx = 0;\r\n        if (url) idx = this._excludes.findIndex(r => r.test(url));\r\n        return idx === -1;\r\n    }\r\n\r\n    /**\r\n     * 决定是否允许路由复用，若 `true` 会触发 `store`\r\n     */\r\n    shouldDetach(route: ActivatedRouteSnapshot): boolean {\r\n        if (!route.routeConfig || route.routeConfig.loadChildren || route.routeConfig.children) return false;\r\n        return this.can(route);\r\n    }\r\n\r\n    /**\r\n     * 存储\r\n     */\r\n    store(_snapshot: ActivatedRouteSnapshot, _handle: {}) {\r\n        if (!_snapshot.routeConfig || _snapshot.routeConfig.loadChildren || _snapshot.routeConfig.children) return ;\r\n        if (this.count >= this._max) this._cached.shift();\r\n        const url = this.getUrl(_snapshot);\r\n        const idx = this.index(url);\r\n\r\n        const item: ReuseTabCached = {\r\n            customTitle: this._titleCached[url],\r\n            title: this.getTitle(url, _snapshot),\r\n            // closable: this.getClosable(url, _snapshot),\r\n            url,\r\n            _snapshot,\r\n            _handle\r\n        };\r\n        if (idx === -1) {\r\n            this._cached.push(item);\r\n        } else {\r\n            this._cached[idx] = item;\r\n        }\r\n        this._clearRemoveBuffer();\r\n\r\n        this._cachedChange.next({ active: 'add', item });\r\n    }\r\n\r\n    /**\r\n     * 决定是否允许应用缓存数据\r\n     */\r\n    shouldAttach(route: ActivatedRouteSnapshot): boolean {\r\n        if (!route.routeConfig || route.routeConfig.loadChildren || route.routeConfig.children) return false;\r\n        const url = this.getUrl(route);\r\n        const data = this.get(url);\r\n        const ret = !!(data && data._handle);\r\n        return ret;\r\n    }\r\n\r\n    /**\r\n     * 提取复用数据\r\n     */\r\n    retrieve(route: ActivatedRouteSnapshot): {} {\r\n        if (!route.routeConfig || route.routeConfig.loadChildren || route.routeConfig.children) return null;\r\n        const url = this.getUrl(route);\r\n        const data = this.get(url);\r\n        return (data && data._handle) || null;\r\n    }\r\n\r\n    /**\r\n     * 决定是否应该进行复用路由处理\r\n     */\r\n    shouldReuseRoute(future: ActivatedRouteSnapshot, curr: ActivatedRouteSnapshot): boolean {\r\n        return future.routeConfig === curr.routeConfig;\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this._cached = null;\r\n        this._cachedChange.unsubscribe();\r\n    }\r\n}\r\n"]}