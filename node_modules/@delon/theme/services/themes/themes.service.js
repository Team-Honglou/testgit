import { Injectable, Inject } from '@angular/core';
import { DOCUMENT } from '@angular/platform-browser';
import { SettingsService } from '../settings/settings.service';
var ThemesService = /** @class */ (function () {
    function ThemesService(settings, doc) {
        this.settings = settings;
        this.doc = doc;
        this.defaultTheme = 'A';
        this.setTheme(settings.layout.theme);
    }
    ThemesService.prototype.setTheme = function (name) {
        if (name === this.defaultTheme) {
            return;
        }
        var bodyEl = this.doc.querySelector('body');
        var removeArr = [];
        for (var i = 0; i < bodyEl.classList.length; i++) {
            if (bodyEl.classList[i].startsWith('theme-')) {
                removeArr.push(bodyEl.classList[i]);
            }
        }
        (_a = bodyEl.classList).remove.apply(_a, removeArr);
        bodyEl.classList.add("theme-" + name.toLowerCase());
        this.defaultTheme = name;
        this.settings.setLayout('theme', name);
        var _a;
    };
    ThemesService.prototype.getDefaultTheme = function () {
        return this.defaultTheme;
    };
    ThemesService.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    ThemesService.ctorParameters = function () { return [
        { type: SettingsService, },
        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },
    ]; };
    return ThemesService;
}());
export { ThemesService };
//# sourceMappingURL=themes.service.js.map