import { Component, TemplateRef, Input, ElementRef, Renderer2 } from '@angular/core';
import { coerceNumberProperty } from '@angular/cdk/coercion';
var NumberInfoComponent = /** @class */ (function () {
    function NumberInfoComponent(el, renderer) {
        this.el = el;
        this.renderer = renderer;
        this._title = '';
        this._subTitle = '';
        this._total = '';
        this._subTotal = '';
        /** 状态样式 */
        this.theme = 'light';
        this._gap = 8;
        this._classMap = [];
    }
    Object.defineProperty(NumberInfoComponent.prototype, "title", {
        set: /** 标题 */
        function (value) {
            if (value instanceof TemplateRef)
                this._titleTpl = value;
            else
                this._title = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NumberInfoComponent.prototype, "subTitle", {
        set: /** 子标题 */
        function (value) {
            if (value instanceof TemplateRef)
                this._subTitleTpl = value;
            else
                this._subTitle = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NumberInfoComponent.prototype, "total", {
        set: /** 总量 */
        function (value) {
            if (value instanceof TemplateRef)
                this._totalTpl = value;
            else
                this._total = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NumberInfoComponent.prototype, "subTotal", {
        set: /** 总量后缀 */
        function (value) {
            if (value instanceof TemplateRef)
                this._subTotalTpl = value;
            else
                this._subTotal = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NumberInfoComponent.prototype, "gap", {
        get: /** 设置数字和描述直接的间距（像素） */
        function () { return this._gap; },
        set: function (value) {
            this._gap = coerceNumberProperty(value);
        },
        enumerable: true,
        configurable: true
    });
    NumberInfoComponent.prototype.setClass = function () {
        var _this = this;
        this._classMap.forEach(function (cls) { return _this.renderer.removeClass(_this.el.nativeElement, cls); });
        this._classMap = ["number-info"];
        if (this.theme)
            this._classMap.push(this.theme);
        this._classMap.forEach(function (v) { return _this.renderer.addClass(_this.el.nativeElement, v); });
    };
    NumberInfoComponent.prototype.ngOnChanges = function (changes) {
        this.setClass();
    };
    NumberInfoComponent.decorators = [
        { type: Component, args: [{
                    selector: 'number-info',
                    template: "\n    <div *ngIf=\"_title || _titleTpl\" class=\"title\"><ng-container *ngIf=\"_title; else _titleTpl\">{{_title}}</ng-container></div>\n    <div *ngIf=\"_subTitle || _subTitleTpl\" class=\"sub-title\"><ng-container *ngIf=\"_subTitle; else _subTitleTpl\">{{_subTitle}}</ng-container></div>\n    <div class=\"value\" [ngStyle]=\"{'margin-top.px': gap}\">\n        <span><ng-container *ngIf=\"_total; else _totalTpl\">{{_total}}</ng-container><em class=\"suffix\" *ngIf=\"suffix\">{{suffix}}</em></span>\n        <span *ngIf=\"status || subTotal\" class=\"sub-total\">\n            <ng-container *ngIf=\"_subTotal; else _subTotalTpl\">{{_subTotal}}</ng-container>\n            <nz-icon *ngIf=\"status\" nzType=\"caret-{{status}}\"></nz-icon>\n        </span>\n    </div>\n    ",
                    styles: ["/* stylelint-disable at-rule-empty-line-before,at-rule-name-space-after,at-rule-no-unknown */ /* stylelint-disable declaration-bang-space-before */ /* stylelint-disable declaration-bang-space-before */ :host { display: block; } :host ::ng-deep .suffix { color: rgba(0, 0, 0, 0.65); font-size: 16px; font-style: normal; margin-left: 4px; } :host ::ng-deep .title { color: rgba(0, 0, 0, 0.65); font-size: 14px; margin-bottom: 16px; transition: all 0.3s; } :host ::ng-deep .sub-title { color: rgba(0, 0, 0, 0.43); font-size: 12px; height: 22px; line-height: 22px; overflow: hidden; text-overflow: ellipsis; word-break: break-all; white-space: nowrap; } :host ::ng-deep .value { margin-top: 4px; font-size: 0; overflow: hidden; text-overflow: ellipsis; word-break: break-all; white-space: nowrap; } :host ::ng-deep .value > span { color: rgba(0, 0, 0, 0.85); display: inline-block; line-height: 32px; height: 32px; font-size: 24px; margin-right: 32px; } :host ::ng-deep .value .sub-total { color: rgba(0, 0, 0, 0.43); font-size: 14px; vertical-align: top; margin-right: 0; } :host ::ng-deep .value .sub-total i { font-size: 12px; transform: scale(0.82); margin-left: 4px; } :host.light ::ng-deep .value > span { color: rgba(0, 0, 0, 0.65); } "]
                },] },
    ];
    /** @nocollapse */
    NumberInfoComponent.ctorParameters = function () { return [
        { type: ElementRef, },
        { type: Renderer2, },
    ]; };
    NumberInfoComponent.propDecorators = {
        "title": [{ type: Input },],
        "subTitle": [{ type: Input },],
        "total": [{ type: Input },],
        "subTotal": [{ type: Input },],
        "suffix": [{ type: Input },],
        "status": [{ type: Input },],
        "theme": [{ type: Input },],
        "gap": [{ type: Input },],
    };
    return NumberInfoComponent;
}());
export { NumberInfoComponent };
//# sourceMappingURL=number-info.component.js.map