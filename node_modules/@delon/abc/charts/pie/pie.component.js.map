{"version":3,"file":"pie.component.js","sourceRoot":"","sources":["../../../../.ng_build/abc/charts/pie/pie.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, HostBinding, ViewChild, ElementRef, OnDestroy, OnChanges, SimpleChanges, NgZone, TemplateRef, OnInit, HostListener, ViewEncapsulation, Output, EventEmitter, ContentChild, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { Subscription } from 'rxjs/Subscription';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { FromEventObservable } from 'rxjs/observable/FromEventObservable';\r\nimport { debounceTime } from 'rxjs/operators';\r\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\r\n\r\n@Component({\r\n    selector: 'pie',\r\n    template: `\r\n    <div class=\"chart\">\r\n        <div #container></div>\r\n        <div *ngIf=\"subTitle || total\" class=\"total\">\r\n            <h4 *ngIf=\"subTitle\" class=\"pie-sub-title\" [innerHTML]=\"subTitle\"></h4>\r\n            <div *ngIf=\"total\" class=\"pie-stat\" [innerHTML]=\"total\"></div>\r\n        </div>\r\n    </div>\r\n    <ul *ngIf=\"hasLegend && legendData?.length\" class=\"legend\">\r\n        <li *ngFor=\"let item of legendData; let index = index\" (click)=\"handleLegendClick(index)\">\r\n            <span class=\"dot\" [ngStyle]=\"{'background-color': !item.checked ? '#aaa' : item.color}\"></span>\r\n            <span class=\"legend-title\">{{item.x}}</span>\r\n            <nz-divider nzType=\"vertical\"></nz-divider>\r\n            <span class=\"percent\">{{item.percent}}%</span>\r\n            <span class=\"value\" [innerHTML]=\"valueFormat ? valueFormat(item.y) : item.y\"></span>\r\n        </li>\r\n    </ul>`,\r\n    styleUrls: [ './pie.css' ],\r\n    encapsulation: ViewEncapsulation.Emulated,\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class G2PieComponent implements OnDestroy, OnChanges, OnInit {\r\n\r\n    // region: fields\r\n\r\n    @Input()\r\n    get animate() { return this._animate; }\r\n    set animate(value: any) {\r\n        this._animate = coerceBooleanProperty(value);\r\n    }\r\n    private _animate = true;\r\n\r\n    @Input() color = 'rgba(24, 144, 255, 0.85)';\r\n    @Input() subTitle: string;\r\n    @Input() total: string;\r\n\r\n    @Input()\r\n    get height() { return this._height; }\r\n    set height(value: any) {\r\n        this._height = coerceNumberProperty(value);\r\n    }\r\n    private _height = 0;\r\n\r\n    @HostBinding('class.has-legend')\r\n    @Input()\r\n    get hasLegend() { return this._hasLegend; }\r\n    set hasLegend(value: any) {\r\n        this._hasLegend = coerceBooleanProperty(value);\r\n    }\r\n    private _hasLegend = false;\r\n\r\n    @HostBinding('class.legend-block')\r\n    @Input()\r\n    get legendBlock() { return this._legendBlock; }\r\n    set legendBlock(value: any) {\r\n        this._legendBlock = coerceBooleanProperty(value);\r\n    }\r\n    private _legendBlock = false;\r\n\r\n    @Input() inner = 0.75;\r\n    @Input() padding: number[] = [12, 0, 12, 0];\r\n\r\n    @Input()\r\n    get percent() { return this._percent; }\r\n    set percent(value: any) {\r\n        this._percent = coerceNumberProperty(value);\r\n    }\r\n    private _percent: number;\r\n\r\n    @Input()\r\n    get tooltip() { return this._tooltip; }\r\n    set tooltip(value: any) {\r\n        this._tooltip = coerceBooleanProperty(value);\r\n    }\r\n    private _tooltip = true;\r\n\r\n    @Input()\r\n    get lineWidth() { return this._lineWidth; }\r\n    set lineWidth(value: any) {\r\n        this._lineWidth = coerceNumberProperty(value);\r\n    }\r\n    private _lineWidth = 0;\r\n\r\n    @Input()\r\n    get select() { return this._select; }\r\n    set select(value: any) {\r\n        this._select = coerceBooleanProperty(value);\r\n    }\r\n    private _select = true;\r\n\r\n    @Input() data: Array<{ x: number | string, y: number, [key: string]: any }>;\r\n    @Input() valueFormat: Function;\r\n    @Input() colors: any[];\r\n\r\n    // endregion\r\n\r\n    @ViewChild('container') node: ElementRef;\r\n\r\n    chart: any;\r\n    initFlag = false;\r\n    legendData: any[] = [];\r\n\r\n    constructor(private el: ElementRef, private cd: ChangeDetectorRef) { }\r\n\r\n    install() {\r\n        let formatColor;\r\n        if (typeof this.percent !== 'undefined') {\r\n            this.select = false;\r\n            this.tooltip = false;\r\n            formatColor = (value) => value === '占比' ? this.color || 'rgba(24, 144, 255, 0.85)' : '#F0F2F5';\r\n\r\n            /* eslint no-param-reassign: */\r\n            this.data = [\r\n                {\r\n                    x: '占比',\r\n                    y: +this.percent\r\n                },\r\n                {\r\n                    x: '反比',\r\n                    y: 100 - +this.percent\r\n                }\r\n            ];\r\n        }\r\n\r\n        if (!this.data || (this.data && this.data.length < 1)) return;\r\n\r\n        this.node.nativeElement.innerHTML = '';\r\n\r\n        const chart = new G2.Chart({\r\n            container: this.node.nativeElement,\r\n            forceFit: true,\r\n            height: this.height,\r\n            padding: this.padding,\r\n            animate: this.animate\r\n        });\r\n\r\n        if (!this.tooltip) {\r\n            chart.tooltip(false);\r\n        } else {\r\n            chart.tooltip({\r\n                showTitle: false,\r\n                itemTpl: '<li><span style=\"background-color:{color};\" class=\"g2-tooltip-marker\"></span>{name}: {value} %</li>'\r\n            });\r\n        }\r\n\r\n        chart.axis(false);\r\n        chart.legend(false);\r\n\r\n        const dv = new DataSet.DataView();\r\n        dv.source(this.data).transform({\r\n            type: 'percent',\r\n            field: 'y',\r\n            dimension: 'x',\r\n            as: 'percent'\r\n        });\r\n        chart.source(dv, {\r\n            x: {\r\n                type: 'cat',\r\n                range: [0, 1]\r\n            },\r\n            y: {\r\n                min: 0\r\n            }\r\n        });\r\n\r\n        chart.coord('theta', { innerRadius: this.inner });\r\n\r\n        chart\r\n            .intervalStack()\r\n            .position('y')\r\n            .style({ lineWidth: this.lineWidth, stroke: '#fff' })\r\n            .tooltip('x*percent', (item, percent) => {\r\n                return {\r\n                    name: item,\r\n                    value: percent\r\n                };\r\n            })\r\n            .color('x', this.percent ? formatColor : this.colors)\r\n            .select(this.select);\r\n\r\n        chart.render();\r\n\r\n        this.chart = chart;\r\n        if (this.hasLegend) {\r\n            this.legendData = chart.getAllGeoms()[0]._attrs.dataArray.map((item: any) => {\r\n                const origin = item[0]._origin;\r\n                origin.color = item[0].color;\r\n                origin.checked = true;\r\n                origin.percent = (origin.percent * 100).toFixed(2);\r\n                return origin;\r\n            });\r\n            this.cd.markForCheck();\r\n        }\r\n    }\r\n\r\n    uninstall() {\r\n        if (this.chart) {\r\n            this.chart.destroy();\r\n            this.chart = null;\r\n        }\r\n    }\r\n\r\n    handleLegendClick(i: number) {\r\n        this.legendData[i].checked = !this.legendData[i].checked;\r\n\r\n        if (this.chart) {\r\n            this.chart.filter('x', (val: any, item: any) => item.checked);\r\n            this.chart.repaint();\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.initFlag = true;\r\n        setTimeout(() => this.install(), 100);\r\n        this.installResizeEvent();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (this.initFlag)\r\n            this.install();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.uninstallResizeEvent();\r\n        this.uninstall();\r\n    }\r\n\r\n    // region: resize\r\n\r\n    private scroll$: Subscription = null;\r\n    private installResizeEvent() {\r\n        if (!this.hasLegend) return;\r\n\r\n        this.scroll$ = <any>FromEventObservable.create(window, 'resize')\r\n                            .pipe(debounceTime(200))\r\n                            .subscribe(() => this.resize());\r\n    }\r\n\r\n    private uninstallResizeEvent() {\r\n        if (this.scroll$) this.scroll$.unsubscribe();\r\n    }\r\n\r\n    resize() {\r\n        if (this.el.nativeElement.clientWidth <= 380) {\r\n            if (!this.legendBlock) {\r\n                this.legendBlock = true;\r\n            }\r\n        } else if (this.legendBlock) {\r\n            this.legendBlock = false;\r\n        }\r\n        if (!this.chart) this.install();\r\n    }\r\n\r\n    // endregion\r\n}\r\n"]}