{"version":3,"file":"down-file.directive.js","sourceRoot":"","sources":["../../../.ng_build/abc/down-file/down-file.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,UAAU,EAAE,KAAK,EAAE,YAAY,EAAE,YAAY,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC;AAGjG,OAAO,EAAE,MAAM,EAAE,MAAM,YAAY,CAAC;AACpC,OAAO,EAAE,WAAW,EAAE,MAAM,cAAc,CAAC;;;;;;;;;IAyBvC,2BAAoB,EAAc,EAAU,KAAkB;QAA1C,OAAE,GAAF,EAAE,CAAY;QAAU,UAAK,GAAL,KAAK,CAAa;;0BAVnB,KAAK;;uBAMT,IAAI,YAAY,EAAO;;qBAEzB,IAAI,YAAY,EAAO;KAG3D;IAEsB,kCAAM;;QACzB,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,QAAQ,GAAG,IAAI,CAAC;QACtC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,OAAO,EAAE;YAC9C,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,IAAI,EAAE,CAAC;YACnD,YAAY,EAAE,MAAM;YACpB,OAAO,EAAE,UAAU;SACtB,CAAC,CAAC,SAAS,CAAC,UAAC,GAAuB;YACjC,EAAE,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;gBACrB,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;gBACrB,MAAM,CAAC;aACV;YACD,IAAM,QAAQ,GAAG,KAAI,CAAC,QAAQ,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YAC/F,MAAM,CAAC,GAAG,CAAC,IAAI,EAAE,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;YACtC,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACvB,KAAI,CAAC,EAAE,CAAC,aAAa,CAAC,QAAQ,GAAG,KAAK,CAAC;SAC1C,EAAE,UAAC,GAAG;YACH,KAAI,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACrB,KAAI,CAAC,EAAE,CAAC,aAAa,CAAC,QAAQ,GAAG,KAAK,CAAC;SAC1C,CAAC,CAAC;;;gBArCV,SAAS,SAAC,EAAE,QAAQ,EAAE,aAAa,EAAE;;;;gBAblB,UAAU;gBAIrB,WAAW;;;6BAaf,KAAK,SAAC,WAAW;+BAEjB,KAAK,SAAC,aAAa;4BAEnB,KAAK,SAAC,UAAU;6BAEhB,KAAK,SAAC,WAAW;4BAEjB,MAAM;0BAEN,MAAM;2BAKN,YAAY,SAAC,OAAO;;4BAhCzB;;SAca,iBAAiB","sourcesContent":["import { Directive, ElementRef, Input, HostListener, EventEmitter, Output } from '@angular/core';\r\nimport { HttpResponse } from '@angular/common/http';\r\nimport * as moment from 'moment';\r\nimport { saveAs } from 'file-saver';\r\nimport { _HttpClient } from '@delon/theme';\r\n\r\n/**\r\n * 文件下载\r\n *\r\n * ```html\r\n * <button nz-button down-file http-url=\"assets/demo{{i}}\" file-name=\"demo中文\">{{i}}</button>\r\n * ```\r\n */\r\n@Directive({ selector: '[down-file]' })\r\nexport class DownFileDirective {\r\n\r\n    /** URL请求参数 */\r\n    @Input('http-data') httpData: any;\r\n    /** 请求类型 */\r\n    @Input('http-method') httpMethod: string = 'get';\r\n    /** 下载地址 */\r\n    @Input('http-url') httpUrl: string;\r\n    /** 指定文件名，若为空从服务端返回的 `header` 中获取 `filename`、`x-filename` */\r\n    @Input('file-name') fileName: string;\r\n    /** 成功回调 */\r\n    @Output() success: EventEmitter<any> = new EventEmitter<any>();\r\n    /** 错误回调 */\r\n    @Output() error: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    constructor(private el: ElementRef, private _http: _HttpClient) {\r\n    }\r\n\r\n    @HostListener('click') _click() {\r\n        this.el.nativeElement.disabled = true;\r\n        this._http.request(this.httpMethod, this.httpUrl, {\r\n            params: this._http.parseParams(this.httpData || {}),\r\n            responseType: 'blob',\r\n            observe: 'response'\r\n        }).subscribe((res: HttpResponse<Blob>) => {\r\n            if (res.body.size <= 0) {\r\n                this.error.emit(res);\r\n                return;\r\n            }\r\n            const fileName = this.fileName || res.headers.get('filename') || res.headers.get('x-filename');\r\n            saveAs(res.body, decodeURI(fileName));\r\n            this.success.emit(res);\r\n            this.el.nativeElement.disabled = false;\r\n        }, (err) => {\r\n            this.error.emit(err);\r\n            this.el.nativeElement.disabled = false;\r\n        });\r\n    }\r\n}\r\n"]}