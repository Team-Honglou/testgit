{"version":3,"file":"jwt.helper.js","sourceRoot":"","sources":["../../../../.ng_build/auth/token/jwt/jwt.helper.ts"],"names":[],"mappings":"AAAA,MAAM,0BAA0B,GAAW;IACvC,IAAI,MAAM,GAAG,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;IACvD,MAAM,CAAC,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;QACxB,KAAK,CAAC,EAAE,CAAC;YACL,KAAK,CAAC;SACT;QACD,KAAK,CAAC,EAAE,CAAC;YACL,MAAM,IAAI,IAAI,CAAC;YACf,KAAK,CAAC;SACT;QACD,KAAK,CAAC,EAAE,CAAC;YACL,MAAM,IAAI,GAAG,CAAC;YACd,KAAK,CAAC;SACT;QACD,SAAS,CAAC;YACN,MAAM,IAAI,KAAK,CAAC,2BAA2B,CAAC,CAAC;SAChD;KACJ;IACD,MAAM,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC;CACnC;;AAGD,mBAAmB,GAAW;IAC1B,IAAM,KAAK,GAAG,mEAAmE,CAAC;IAClF,IAAI,MAAM,GAAW,EAAE,CAAC;IAExB,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;IAErC,EAAE,CAAC,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QACvB,MAAM,IAAI,KAAK,CAAC,mEAAmE,CAAC,CAAC;KACxF;IAED,GAAG,CAAC,CAAC;;IAED,IAAI,EAAE,GAAW,CAAC,EAAE,EAAE,SAAK,EAAE,MAAM,SAAK,EAAE,GAAG,GAAW,CAAC;;IAEzD,CAAC,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC;;IAE5B,CAAC,MAAM;QACP,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,EAAE,GAAG,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC;;;YAG1C,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,IAAI,MAAM,CAAC,YAAY,CAAC,GAAG,GAAG,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAChF,CAAC;;QAEC,MAAM,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;KAClC;IACD,MAAM,CAAC,MAAM,CAAC;CACjB;;AAGD,0BAA0B,GAAQ;IAC9B,MAAM,CAAC,kBAAkB,CACjB,KAAK,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,EAAE,UAAC,CAAM;QAC5C,MAAM,CAAC,GAAG,GAAG,CAAC,IAAI,GAAG,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;KAChE,CAAC,CAAC,IAAI,CAAC,EAAE,CAAC,CACd,CAAC;CACT","sourcesContent":["export function urlBase64Decode(str: string): string {\r\n    let output = str.replace(/-/g, '+').replace(/_/g, '/');\r\n    switch (output.length % 4) {\r\n        case 0: {\r\n            break;\r\n        }\r\n        case 2: {\r\n            output += '==';\r\n            break;\r\n        }\r\n        case 3: {\r\n            output += '=';\r\n            break;\r\n        }\r\n        default: {\r\n            throw new Error('Illegal base64url string!');\r\n        }\r\n    }\r\n    return b64DecodeUnicode(output);\r\n}\r\n\r\n// credits for decoder goes to https://github.com/atk\r\nfunction b64decode(str: string): string {\r\n    const chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\r\n    let output: string = '';\r\n\r\n    str = String(str).replace(/=+$/, '');\r\n\r\n    if (str.length % 4 === 1) {\r\n        throw new Error(`'atob' failed: The string to be decoded is not correctly encoded.`);\r\n    }\r\n\r\n    for (\r\n        // initialize result and counters\r\n        let bc: number = 0, bs: any, buffer: any, idx: number = 0;\r\n        // get next character\r\n        (buffer = str.charAt(idx++));\r\n        // character found in table? initialize bit storage and add its ascii value;\r\n        ~buffer &&\r\n        ((bs = bc % 4 ? bs * 64 + buffer : buffer),\r\n        // and if not first of each 4 characters,\r\n        // convert the first 8 bits to one ascii character\r\n        bc++ % 4) ? (output += String.fromCharCode(255 & (bs >> ((-2 * bc) & 6)))) : 0\r\n    ) {\r\n        // try to find character in table (0-63, not found => -1)\r\n        buffer = chars.indexOf(buffer);\r\n    }\r\n    return output;\r\n}\r\n\r\n// https://developer.mozilla.org/en/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_Unicode_Problem\r\nfunction b64DecodeUnicode(str: any) {\r\n    return decodeURIComponent(\r\n            Array.prototype.map.call(b64decode(str), (c: any) => {\r\n                return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);\r\n            }).join('')\r\n        );\r\n}\r\n"]}