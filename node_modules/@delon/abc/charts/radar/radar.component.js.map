{"version":3,"file":"radar.component.js","sourceRoot":"","sources":["../../../../.ng_build/abc/charts/radar/radar.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, HostBinding, ViewChild, ElementRef, OnDestroy, OnChanges, SimpleChanges, NgZone, TemplateRef, OnInit, HostListener, Output, EventEmitter, ContentChild, SimpleChange, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\r\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\r\n\r\n@Component({\r\n    selector: 'radar',\r\n    template: `\r\n    <h4 *ngIf=\"_title; else _titleTpl\">{{ _title }}</h4>\r\n    <div #container></div>\r\n    <div nz-row class=\"legend\" *ngIf=\"hasLegend\">\r\n        <div nz-col [nzSpan]=\"24 / legendData.length\" *ngFor=\"let i of legendData; let idx = index\" (click)=\"handleLegendClick(idx)\">\r\n            <div class=\"legend-item\">\r\n                <p>\r\n                    <i class=\"dot\" [ngStyle]=\"{'background-color': !i.checked ? '#aaa' : i.color}\"></i>\r\n                    <span>{{i.name}}</span>\r\n                </p>\r\n                <h6>{{i.value}}</h6>\r\n            </div>\r\n        </div>\r\n    </div>`,\r\n    styleUrls: [ './radar.css' ],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class G2RadarComponent implements OnDestroy, OnChanges, OnInit {\r\n\r\n    // region: fields\r\n\r\n    _title = '';\r\n    _titleTpl: TemplateRef<any>;\r\n    @Input()\r\n    set title(value: string | TemplateRef<any>) {\r\n        if (value instanceof TemplateRef)\r\n            this._titleTpl = value;\r\n        else\r\n            this._title = value;\r\n    }\r\n\r\n    @HostBinding('style.height.px')\r\n    @Input()\r\n    get height() { return this._height; }\r\n    set height(value: any) {\r\n        this._height = coerceNumberProperty(value);\r\n    }\r\n    private _height = 0;\r\n\r\n    @Input() padding: number[] = [44, 30, 16, 30];\r\n\r\n    @Input()\r\n    get hasLegend() { return this._hasLegend; }\r\n    set hasLegend(value: any) {\r\n        this._hasLegend = coerceBooleanProperty(value);\r\n    }\r\n    private _hasLegend = true;\r\n\r\n    @Input()\r\n    get tickCount() { return this._tickCount; }\r\n    set tickCount(value: any) {\r\n        this._tickCount = coerceNumberProperty(value);\r\n    }\r\n    private _tickCount = 4;\r\n\r\n    @Input() data: Array<{ name: string, label: string, value: number, [key: string]: any }> = [];\r\n\r\n    // endregion\r\n\r\n    @ViewChild('container') node: ElementRef;\r\n\r\n    chart: any;\r\n    initFlag = false;\r\n    legendData: any[] = [];\r\n\r\n    constructor(private el: ElementRef, private cd: ChangeDetectorRef) { }\r\n\r\n    handleLegendClick(i: number) {\r\n        this.legendData[i].checked = !this.legendData[i].checked;\r\n\r\n        if (this.chart) {\r\n            // const filterItem = this.legendData.filter(l => l.checked).map(l => l.name);\r\n            this.chart.filter('name', (val: any) => this.legendData.find(w => w.name === val).checked);\r\n            this.chart.repaint();\r\n        }\r\n    }\r\n\r\n    install() {\r\n        if (!this.data || (this.data && this.data.length < 1)) return;\r\n\r\n        this.node.nativeElement.innerHTML = '';\r\n\r\n        const colors = [\r\n            '#1890FF', '#FACC14', '#2FC25B', '#8543E0', '#F04864', '#13C2C2', '#fa8c16', '#a0d911',\r\n        ];\r\n\r\n        const chart = new G2.Chart({\r\n            container: this.node.nativeElement,\r\n            forceFit: true,\r\n            height: +this.height - (this.hasLegend ? 80 : 22),\r\n            padding: this.padding\r\n        });\r\n        chart.source(this.data, {\r\n            value: {\r\n                min: 0,\r\n                tickCount: this.tickCount\r\n            }\r\n        });\r\n\r\n        chart.coord('polar');\r\n        chart.legend(false);\r\n\r\n        chart.axis('label', {\r\n            line: null,\r\n            labelOffset: 8,\r\n            labels: {\r\n                label: {\r\n                    fill: 'rgba(0, 0, 0, .65)'\r\n                }\r\n            },\r\n            grid: {\r\n                line: {\r\n                    stroke: '#e9e9e9',\r\n                    lineWidth: 1,\r\n                    lineDash: [0, 0]\r\n                }\r\n            }\r\n        });\r\n\r\n        chart.axis('value', {\r\n            grid: {\r\n                type: 'polygon',\r\n                line: {\r\n                    stroke: '#e9e9e9',\r\n                    lineWidth: 1,\r\n                    lineDash: [0, 0]\r\n                }\r\n            },\r\n            labels: {\r\n                label: {\r\n                    fill: 'rgba(0, 0, 0, .65)'\r\n                }\r\n            }\r\n        });\r\n\r\n        chart.line().position('label*value').color('name', colors);\r\n        chart.point().position('label*value').color('name', colors).shape('circle').size(3);\r\n\r\n        chart.render();\r\n\r\n        this.chart = chart;\r\n\r\n        if (this.hasLegend) {\r\n            this.legendData = chart.getAllGeoms()[0]._attrs.dataArray.map((item: any) => {\r\n                const origin = item[0]._origin;\r\n                const result = {\r\n                    name: origin.name,\r\n                    color: item[0].color,\r\n                    checked: true,\r\n                    value: item.reduce((p, n) => p + n._origin.value, 0),\r\n                };\r\n\r\n                return result;\r\n            });\r\n            this.cd.markForCheck();\r\n        }\r\n    }\r\n\r\n    uninstall() {\r\n        if (this.chart) {\r\n            this.chart.destroy();\r\n            this.chart = null;\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.initFlag = true;\r\n        setTimeout(() => this.install(), 100);\r\n    }\r\n\r\n    ngOnChanges(changes: { [P in keyof this]?: SimpleChange } & SimpleChanges): void {\r\n        if (this.initFlag)\r\n            this.install();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.uninstall();\r\n    }\r\n}\r\n"]}