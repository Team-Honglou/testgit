{"version":3,"file":"social.service.js","sourceRoot":"","sources":["../../../.ng_build/auth/social/social.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Observable } from 'rxjs/Observable';\r\nimport { Injectable, Inject, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { DOCUMENT } from '@angular/platform-browser';\r\nimport { ITokenModel, ITokenService, DA_SERVICE_TOKEN } from '../token/interface';\r\nimport { Observer } from 'rxjs/Observer';\r\n\r\nconst OPENTYPE = '_delonAuthSocialType';\r\nconst HREFCALLBACK = '_delonAuthSocialCallbackByHref';\r\n\r\nexport type SocialOpenType = 'href' | 'window';\r\n\r\n@Injectable()\r\nexport class SocialService implements OnDestroy {\r\n    private _win: Window;\r\n    private _win$: any;\r\n    private observer: Observer<ITokenModel>;\r\n\r\n    constructor(\r\n        @Inject(DA_SERVICE_TOKEN) private tokenService: ITokenService,\r\n        @Inject(DOCUMENT) private doc: any,\r\n        private router: Router) {}\r\n\r\n    /**\r\n     * 使用窗体打开授权页，返回值是 `Observable<ITokenModel>` 用于订阅授权后返回的结果\r\n     * @param url 获取授权地址\r\n     * @param callback 回调路由地址\r\n     * @param options.windowFeatures 等同 `window.open` 的 `features` 参数值\r\n     */\r\n    login(url: string, callback?: string, options?: {\r\n        type?: 'window',\r\n        windowFeatures?: string\r\n    }): Observable<ITokenModel>;\r\n\r\n    /**\r\n     * 跳转至授权页\r\n     * @param url 获取授权地址\r\n     * @param callback 回调路由地址\r\n     */\r\n    login(url: string, callback?: string, options?: {\r\n        type?: 'href'\r\n    }): void;\r\n\r\n    /**\r\n     * 跳转至登录页，若为 `type=window` 时，返回值是 `Observable<ITokenModel>`\r\n     * @param url 获取授权地址\r\n     * @param callback 当 `type=href` 成功时的回调路由地址\r\n     * @param options.type 打开方式\r\n     * @param options.windowFeatures 等同 `window.open` 的 `features` 参数值\r\n     */\r\n    login(url: string, callback?: string, options: {\r\n        type?: 'href' | 'window',\r\n        windowFeatures?: string\r\n    } = {}): Observable<ITokenModel> | void {\r\n        options = Object.assign({\r\n            type: 'href',\r\n            windowFeatures: 'location=yes,height=570,width=520,scrollbars=yes,status=yes'\r\n        }, options);\r\n        localStorage.setItem(OPENTYPE, options.type);\r\n        localStorage.setItem(HREFCALLBACK, callback || '/');\r\n        if (options.type === 'href') {\r\n            this.doc.location.href = url;\r\n        } else {\r\n            this._win = window.open(url, '_blank', options.windowFeatures);\r\n            this._win$ = setInterval(() => {\r\n                if (this._win && this._win.closed) {\r\n                    this.ngOnDestroy();\r\n\r\n                    let model = this.tokenService.get();\r\n                    if (model && !model.token) model = null;\r\n\r\n                    if (model) {\r\n                        this.tokenService.set(model);\r\n                    }\r\n\r\n                    if (this.observer) {\r\n                        this.observer.next(model);\r\n                        this.observer.complete();\r\n                    }\r\n                }\r\n            }, 100);\r\n        }\r\n        if (options.type === 'window') {\r\n            return Observable.create((observer: Observer<ITokenModel>) => {\r\n                this.observer = observer;\r\n            });\r\n        } else {\r\n            return ;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 授权成功后的回调处理\r\n     * @param rawData 指定回调认证信息，为空时从根据当前URL解析\r\n     */\r\n    callback(rawData?: string | ITokenModel, allowRedirect: boolean = true): ITokenModel {\r\n        // from uri\r\n        if (!rawData && this.router.url.indexOf('?') === -1) {\r\n            throw new Error(`url muse contain a ?`);\r\n        }\r\n        // parse\r\n        let data: ITokenModel = { token: `` };\r\n        if (typeof rawData === 'string') {\r\n            const rightUrl = rawData.split('?')[1].split('#')[0];\r\n            data = <any>this.router.parseUrl(~rightUrl.indexOf('?') ? rightUrl : './?' + rightUrl).queryParams || {};\r\n        } else {\r\n            data = rawData;\r\n        }\r\n\r\n        if (!data || !data.token) throw new Error(`invalide token data`);\r\n        this.tokenService.set(data);\r\n\r\n        // redirect\r\n        if (allowRedirect === true) {\r\n            const url = localStorage.getItem(HREFCALLBACK) || '/';\r\n            localStorage.removeItem(HREFCALLBACK);\r\n            const type = localStorage.getItem(OPENTYPE);\r\n            localStorage.removeItem(OPENTYPE);\r\n            if (type === 'window') {\r\n                window.close();\r\n            } else {\r\n                this.router.navigateByUrl(url);\r\n            }\r\n        }\r\n\r\n        return data;\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (this._win$) {\r\n            clearInterval(this._win$);\r\n            this._win$ = null;\r\n        }\r\n    }\r\n}\r\n"]}