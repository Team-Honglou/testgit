{"version":3,"file":"settings.service.js","sourceRoot":"","sources":["../../../../.ng_build/theme/services/settings/settings.service.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAG3C,IAAM,GAAG,GAAG,QAAQ,CAAC;;;mBAiCN;YACP,IAAI,EAAE,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC,WAAW,EAAE;SACnC;oBAEY,EAAE;uBAEW,IAAI;;IAEtB,6BAAG,GAAX,UAAY,GAAW;QACnB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,MAAM,CAAC,IAAI,IAAI,CAAC;KAClE;IAEO,6BAAG,GAAX,UAAY,GAAW,EAAE,KAAU;QAC/B,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;KACpD;IAED,sBAAI,mCAAM;aAAV;YACI,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAChB,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,MAAM,CAAS;oBACjC,KAAK,EAAE,IAAI;oBACX,SAAS,EAAE,KAAK;oBAChB,KAAK,EAAE,KAAK;oBACZ,KAAK,EAAE,GAAG;oBACV,IAAI,EAAE,IAAI;iBACb,EAAE,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;gBAClB,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;aAC/B;YACD,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;SACvB;;;OAAA;IAED,mCAAS,GAAT,UAAU,IAAY,EAAE,KAAU;QAC9B,EAAE,CAAC,CAAC,OAAO,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,WAAW,CAAC,CAAC,CAAC;YAC3C,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,KAAK,CAAC;YAC1B,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;YAC5B,MAAM,CAAC,IAAI,CAAC;SACf;QACD,MAAM,CAAC,KAAK,CAAC;KAChB;IAED,gCAAM,GAAN,UAAO,GAAQ;QACX,IAAI,CAAC,GAAG,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;KAC3C;IAED,iCAAO,GAAP,UAAQ,GAAS;QACb,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;KAC7C;;gBA/CJ,UAAU;;;;0BAlCX;;SAmCa,eAAe","sourcesContent":["import { Injectable } from '@angular/core';\nimport { ThemeType } from '../themes/themes.service';\n\nconst KEY = 'layout';\n\nexport interface User {\n    name?: string;\n    avatar?: string;\n    email?: string;\n    [key: string]: any;\n}\n\nexport interface App {\n    name?: string;\n    description?: string;\n    year?: number;\n    [key: string]: any;\n}\n\nexport type SidebarThemeType = 'light' | 'dark';\n\nexport interface Layout {\n    /** 是否固定顶部菜单 */\n    fixed: boolean;\n    /** 是否折叠右边菜单 */\n    collapsed: boolean;\n    /** 是否固定宽度 */\n    boxed: boolean;\n    /** 当前主题 */\n    theme: ThemeType;\n    /** 语言环境 */\n    lang: string;\n}\n\n@Injectable()\nexport class SettingsService {\n    app: App = {\n        year: (new Date()).getFullYear()\n    };\n\n    user: User = {};\n\n    private _layout: Layout = null;\n\n    private get(key: string) {\n        return JSON.parse(localStorage.getItem(key) || 'null') || null;\n    }\n\n    private set(key: string, value: any) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    get layout(): Layout {\n        if (!this._layout) {\n            this._layout = Object.assign(<Layout>{\n                fixed: true,\n                collapsed: false,\n                boxed: false,\n                theme: 'A',\n                lang: null\n            }, this.get(KEY));\n            this.set(KEY, this._layout);\n        }\n        return this._layout;\n    }\n\n    setLayout(name: string, value: any): boolean {\n        if (typeof this.layout[name] !== 'undefined') {\n            this.layout[name] = value;\n            this.set(KEY, this._layout);\n            return true;\n        }\n        return false;\n    }\n\n    setApp(val: App) {\n        this.app = Object.assign(this.app, val);\n    }\n\n    setUser(val: User) {\n        this.user = Object.assign(this.user, val);\n    }\n\n}\n"]}