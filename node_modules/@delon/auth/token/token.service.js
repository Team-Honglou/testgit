import { Injectable, Inject } from '@angular/core';
import { BehaviorSubject } from 'rxjs/BehaviorSubject';
import { share } from 'rxjs/operators';
import { DA_STORE_TOKEN } from '../store/interface';
import { DA_OPTIONS_TOKEN } from '../auth.options';
var TokenService = /** @class */ (function () {
    function TokenService(options, store) {
        this.options = options;
        this.store = store;
        this.change$ = new BehaviorSubject(null);
    }
    Object.defineProperty(TokenService.prototype, "login_url", {
        get: function () {
            return this.options.login_url;
        },
        enumerable: true,
        configurable: true
    });
    TokenService.prototype.set = function (data) {
        this.change$.next(data);
        return this.store.set(this.options.store_key, data);
    };
    TokenService.prototype.get = function (type) {
        var data = this.store.get(this.options.store_key);
        return type ? Object.assign(new type(), data) : data;
    };
    TokenService.prototype.clear = function () {
        this.change$.next(null);
        this.store.remove(this.options.store_key);
    };
    TokenService.prototype.change = function () {
        return this.change$.pipe(share());
    };
    TokenService.decorators = [
        { type: Injectable },
    ];
    /** @nocollapse */
    TokenService.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [DA_OPTIONS_TOKEN,] },] },
        { type: undefined, decorators: [{ type: Inject, args: [DA_STORE_TOKEN,] },] },
    ]; };
    return TokenService;
}());
export { TokenService };
//# sourceMappingURL=token.service.js.map