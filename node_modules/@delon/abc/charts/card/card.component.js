import { Component, TemplateRef, Input } from '@angular/core';
import { coerceBooleanProperty } from '@angular/cdk/coercion';
var ChartCardComponent = /** @class */ (function () {
    function ChartCardComponent() {
        this._bordered = false;
        this._avatar = '';
        this._title = '';
        this._action = '';
        this.total = '';
        this._height = 'auto';
        this._footer = '';
        this._loading = false;
    }
    Object.defineProperty(ChartCardComponent.prototype, "bordered", {
        get: 
        // region fields
        /** 是否显示边框 */
        function () { return this._bordered; },
        set: function (value) {
            this._bordered = coerceBooleanProperty(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ChartCardComponent.prototype, "avatar", {
        set: function (value) {
            if (value instanceof TemplateRef)
                this._avatarTpl = value;
            else
                this._avatar = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ChartCardComponent.prototype, "title", {
        set: function (value) {
            if (value instanceof TemplateRef)
                this._titleTpl = value;
            else
                this._title = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ChartCardComponent.prototype, "action", {
        set: function (value) {
            if (value instanceof TemplateRef)
                this._actionTpl = value;
            else
                this._action = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ChartCardComponent.prototype, "contentHeight", {
        set: function (value) {
            this._orgHeight = value;
            this._height = typeof value === 'number' ? this._height = value + "px" : value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ChartCardComponent.prototype, "footer", {
        set: function (value) {
            if (value instanceof TemplateRef)
                this._footerTpl = value;
            else
                this._footer = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ChartCardComponent.prototype, "loading", {
        get: /** 是否显示Loading */
        function () { return this._loading; },
        set: function (value) {
            this._loading = coerceBooleanProperty(value);
        },
        enumerable: true,
        configurable: true
    });
    ChartCardComponent.decorators = [
        { type: Component, args: [{
                    selector: 'chart-card',
                    template: "\n    <nz-card [nzBodyStyle]=\"{padding: '20px 24px 8px 24px'}\" [nzBordered]=\"bordered\">\n        <nz-spin [nzSpinning]=\"loading\">\n            <div class=\"chart-card\">\n                <div class=\"chart-top\">\n                    <div class=\"avatar\"><ng-container *ngIf=\"_avatar; else _avatarTpl\">{{ _avatar }}</ng-container></div>\n                    <div class=\"meta-wrap\">\n                        <div class=\"meta\">\n                            <span class=\"title\" *ngIf=\"_title; else _titleTpl\">{{ _title }}</span>\n                            <span class=\"action\" *ngIf=\"_action || _actionTpl\">\n                                <ng-container *ngIf=\"_action; else _actionTpl\">{{ _action }}</ng-container>\n                            </span>\n                        </div>\n                        <p *ngIf=\"total\" class=\"total\" [innerHTML]=\"total\"></p>\n                    </div>\n                </div>\n                <div class=\"desc\" [ngStyle]=\"{'height':_height}\">\n                    <div [ngClass]=\"{'fixed': !!_orgHeight }\">\n                        <ng-content></ng-content>\n                    </div>\n                </div>\n                <div class=\"footer\" *ngIf=\"_footer || _footerTpl\">\n                    <ng-container *ngIf=\"_footer; else _footerTpl\">{{ _footer }}</ng-container>\n                </div>\n            </div>\n        </nz-spin>\n    </nz-card>\n    ",
                    styles: ["/* stylelint-disable at-rule-empty-line-before,at-rule-name-space-after,at-rule-no-unknown */ /* stylelint-disable declaration-bang-space-before */ /* stylelint-disable declaration-bang-space-before */ :host ::ng-deep .chart-card { position: relative; } :host ::ng-deep .chart-top { position: relative; overflow: hidden; width: 100%; } :host ::ng-deep .chart-top-margin { margin-bottom: 12px; } :host ::ng-deep .chart-top-has-margin { margin-bottom: 20px; } :host ::ng-deep .meta-wrap { float: left; } :host ::ng-deep .avatar { position: relative; top: 4px; float: left; margin-right: 20px; } :host ::ng-deep .avatar img { border-radius: 100%; } :host ::ng-deep .meta { color: rgba(0, 0, 0, 0.43); font-size: 12px; line-height: 22px; height: 22px; } :host ::ng-deep .action { cursor: pointer; position: absolute; top: 0; right: 0; } :host ::ng-deep .total { overflow: hidden; text-overflow: ellipsis; word-break: break-all; white-space: nowrap; color: rgba(0, 0, 0, 0.85); margin-top: 4px; margin-bottom: 0; font-size: 30px; line-height: 38px; height: 38px; } :host ::ng-deep .desc { margin-bottom: 12px; width: 100%; } :host ::ng-deep .footer { border-top: 1px solid #e9e9e9; padding-top: 9px; margin-top: 8px; } :host ::ng-deep .footer > * { position: relative; } :host ::ng-deep .footer-margin { margin-top: 20px; } "]
                },] },
    ];
    // endregion
    /** @nocollapse */
    ChartCardComponent.ctorParameters = function () { return []; };
    ChartCardComponent.propDecorators = {
        "bordered": [{ type: Input },],
        "avatar": [{ type: Input },],
        "title": [{ type: Input },],
        "action": [{ type: Input },],
        "total": [{ type: Input },],
        "contentHeight": [{ type: Input },],
        "footer": [{ type: Input },],
        "loading": [{ type: Input },],
    };
    return ChartCardComponent;
}());
export { ChartCardComponent };
//# sourceMappingURL=card.component.js.map