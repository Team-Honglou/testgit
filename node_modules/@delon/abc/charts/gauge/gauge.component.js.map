{"version":3,"file":"gauge.component.js","sourceRoot":"","sources":["../../../../.ng_build/abc/charts/gauge/gauge.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component, Input, HostBinding, ViewChild, ElementRef, OnInit, OnDestroy, OnChanges, SimpleChanges, NgZone, TemplateRef, ChangeDetectionStrategy, ChangeDetectorRef, SimpleChange } from '@angular/core';\r\nimport { coerceNumberProperty } from '@angular/cdk/coercion';\r\n\r\n@Component({\r\n    selector: 'gauge',\r\n    template: `<div #container></div>`,\r\n    styles: [`:host { display: block; }`],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class GaugeComponent implements OnInit, OnDestroy, OnChanges {\r\n\r\n    // region: fields\r\n\r\n    @Input() title: string;\r\n    @Input()\r\n    get height() { return this._height; }\r\n    set height(value: any) {\r\n        this._height = coerceNumberProperty(value);\r\n    }\r\n    private _height;\r\n    @Input() color = '#2F9CFF';\r\n    @Input() bgColor = '#F0F2F5';\r\n    @Input() format: Function;\r\n\r\n    @Input()\r\n    get percent() { return this._percent; }\r\n    set percent(value: any) {\r\n        this._percent = coerceNumberProperty(value);\r\n    }\r\n    private _percent: number;\r\n\r\n    // endregion\r\n\r\n    @ViewChild('container') node: ElementRef;\r\n\r\n    chart: any;\r\n    initFlag = false;\r\n\r\n    constructor(private cd: ChangeDetectorRef) { }\r\n\r\n    ngOnInit(): void {\r\n        this.initFlag = true;\r\n        setTimeout(() => this.install(), 100);\r\n    }\r\n\r\n    private createData() {\r\n        return [{ name: this.title, value: +this.percent }];\r\n    }\r\n\r\n    private draw() {\r\n        if (!this.chart) return;\r\n        this.chart.guide().clear();\r\n        const data = this.createData();\r\n        // 绘制仪表盘背景\r\n        this.chart.guide().arc({\r\n            zIndex: 0,\r\n            top: false,\r\n            start: [ 0, 0.95 ],\r\n            end: [ 100, 0.95 ],\r\n            style: { // 底灰色\r\n                stroke: this.bgColor,\r\n                lineWidth: 12\r\n            }\r\n        });\r\n        // 绘制指标\r\n        this.chart.guide().arc({\r\n            zIndex: 1,\r\n            start: [ 0, 0.95 ],\r\n            end: [ data[0].value, 0.95 ],\r\n            style: {\r\n                stroke: this.color,\r\n                lineWidth: 12,\r\n            }\r\n        });\r\n        this.chart.changeData(data);\r\n    }\r\n\r\n    install() {\r\n        this.node.nativeElement.innerHTML = '';\r\n        const Shape = G2.Shape;\r\n        // 自定义Shape 部分\r\n        Shape.registerShape('point', 'pointer', {\r\n            drawShape(cfg, group) {\r\n            let point = cfg.points[0]; // 获取第一个标记点\r\n            point = this.parsePoint(point);\r\n            const center = this.parsePoint({ // 获取极坐标系下画布中心点\r\n                x: 0,\r\n                y: 0\r\n            });\r\n            // 绘制指针\r\n            group.addShape('line', {\r\n                attrs:  {\r\n                    x1: center.x,\r\n                    y1: center.y,\r\n                    x2: point.x,\r\n                    y2: point.y,\r\n                    stroke: cfg.color,\r\n                    lineWidth: 2,\r\n                    lineCap: 'round'\r\n                }\r\n            });\r\n\r\n            const { origin } = cfg;\r\n            group.addShape('text', {\r\n                attrs: {\r\n                    x: center.x,\r\n                    y: center.y + 80,\r\n                    text: `${origin._origin.value}%`,\r\n                    textAlign: 'center',\r\n                    fontSize: 24,\r\n                    fill: 'rgba(0, 0, 0, 0.85)'\r\n                }\r\n            });\r\n            return group.addShape('circle', {\r\n                attrs: {\r\n                    x: center.x,\r\n                    y: center.y,\r\n                    r: 9.75,\r\n                    stroke: cfg.color,\r\n                    lineWidth: 2,\r\n                    fill: '#fff'\r\n                }\r\n            });\r\n            }\r\n        });\r\n\r\n        const data = this.createData();\r\n        const chart = new G2.Chart({\r\n            container: this.node.nativeElement,\r\n            forceFit: true,\r\n            height: this.height,\r\n            padding: [10, 10, 30, 10]\r\n        });\r\n        chart.source(data);\r\n\r\n        chart.coord('polar', {\r\n            startAngle: -1.2 * Math.PI,\r\n            endAngle: 0.2 * Math.PI\r\n        });\r\n        chart.scale('value', {\r\n            min: 0,\r\n            max: 100,\r\n            nice: true,\r\n            tickCount: 6\r\n        });\r\n\r\n        chart.axis('1', false);\r\n        // 刻度值\r\n        chart.axis('value', {\r\n            zIndex: 2,\r\n            line: null,\r\n            label: {\r\n                offset: -12,\r\n                formatter: this.format\r\n            },\r\n            tickLine: null,\r\n            grid: null\r\n        });\r\n        chart.legend(false);\r\n        chart.point({\r\n            generatePoints: true\r\n        }).position('value*1')\r\n            .shape('pointer')\r\n            .color(this.color)\r\n            .active(false);\r\n\r\n        this.chart = chart;\r\n        this.draw();\r\n    }\r\n\r\n    uninstall() {\r\n        if (this.chart) this.chart.destroy();\r\n    }\r\n\r\n    ngOnChanges(changes: { [P in keyof this]?: SimpleChange } & SimpleChanges): void {\r\n        if (this.initFlag)\r\n            this.draw();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.uninstall();\r\n    }\r\n}\r\n"]}