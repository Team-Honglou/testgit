{"version":3,"file":"interface.js","sourceRoot":"","sources":["../../../.ng_build/abc/simple-table/interface.ts"],"names":[],"mappings":"","sourcesContent":["import { ElementRef, TemplateRef } from '@angular/core';\nimport { ACLCanType } from '@delon/acl';\n\nexport type CompareFn = ((a: any, b: any) => number);\n\n/**\n * 数据源\n */\nexport interface SimpleTableData {\n    /**\n     * 选择框或单选框状态值\n     */\n    checked?: boolean;\n    /**\n     * 选择框或单选框 `disabled` 值\n     */\n    disabled?: boolean;\n\n    [key: string]: any;\n}\n\n/**\n * 列描述\n */\nexport interface SimpleTableColumn {\n    /**\n     * 类型\n     * - `checkbox` 多选\n     * - `radio` 单选（待实现，跟踪 [#770](https://github.com/NG-ZORRO/ng-zorro-antd/issues/770)）\n     * - `img` 图片且居中(若 `className` 存在则优先)\n     * - `currency` 货币且居右(若 `className` 存在则优先)\n     * - `date` 日期格式且居中(若 `className` 存在则优先)\n     * - `yn` 将`boolean`类型徽章化 [document](http://ng-alain.com/docs/data-render#yn)\n     */\n    type?: 'checkbox' | 'radio' | 'img' | 'currency' | 'date' | 'yn';\n    /**\n     * 表格标题\n     */\n    title: string;\n    /**\n     * 表格标题 i18n\n     */\n    i18n?: string;\n    /**\n     * 列数据在数据项中对应的 key，支持 `a.b.c` 的嵌套写法\n     */\n    index?: string | string[];\n    /**\n     * 按钮组\n     */\n    buttons?: SimpleTableButton[];\n    /**\n     * 自定义渲染\n     */\n    render?: string;\n    /**\n     * 列宽，例如：`10%`、`100px`\n     */\n    width?: string;\n    /**\n     * 排序的默认受控属性\n     * - 只支持同时对一列进行排序\n     * - 保证只有一列的 `sort` 值，否则自动获取所有列的第一个值\n     */\n    sort?: 'ascend' | 'descend';\n    /**\n     * 排序函数，本地排序使用一个函数(参考 [Array.sort](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/sort) 的 compareFunction)\n     * - 只有当属性存在时排序才会真的生效\n     * - 如果是AJAX直接返回 true\n     */\n    sorter?: Function;\n    /**\n     * 排序的后端相对应的KEY，默认使用 `index` 属性\n     * sortKey: 'name' => ?name=1&pi=1\n     */\n    sortKey?: string;\n    /**\n     * 排序的后端相对应的VALUE\n     * { ascend: '0', descend: '1' } => ?name=1&pi=1\n     * { ascend: 'asc', descend: 'desc' } => ?name=desc&pi=1\n     */\n    sortReName?: { ascend?: string, descend?: string };\n    /**\n     * 表头的筛选菜单项，至少一项以上才会生效\n     */\n    filters?: SimpleTableFilter[];\n    /**\n     * 本地模式下，确定筛选的运行函数\n     * - 只有当属性存在时筛选才会真的生效\n     * - 如果是AJAX直接返回 true\n     */\n    filter?: Function;\n    /**\n     * 标识数据是否经过过滤，筛选图标会高亮\n     */\n    filtered?: boolean;\n    /**\n     * 自定义 filter 图标，默认 `anticon anticon-filter`\n     */\n    filterIcon?: string;\n    /**\n     * filter 确认按钮文本，默认 `确认`\n     */\n    filterConfirmText?: string;\n    /**\n     * filter 清除按钮文本，默认 `重置`\n     */\n    filterClearText?: string;\n    /**\n     * 是否多选，默认 `true`\n     */\n    filterMultiple?: boolean;\n    /**\n     * 过滤的后端相对应的KEY，默认使用 `index` 属性\n     * filterKey: 'name' => ?name=1&pi=1\n     */\n    filterKey?: string;\n    /**\n     * 过滤的后端相对应的VALUE\n     * - 默认当 `filterMultiple` 时以英文逗号拼接的字符串\n     * - 参数为 `filters` 原样数组\n     * - 返回为 Object 对象\n     */\n    filterReName?: (list: SimpleTableFilter[], col: SimpleTableColumn) => Object;\n    /**\n     * 格式化列值\n     */\n    format?: Function;\n    /**\n     * 自定义全/反选选择项\n     */\n    selections?: SimpleTableSelection[];\n    /**\n     * 列 `class` 属性值（注：无须 `.` 点），例如：\n     * - `text-center` 居中\n     * - `text-right` 居右\n     * - `text-success` 成功色\n     * - `text-danger` 异常色\n     */\n    className?: string;\n    /**\n     * 合并列\n     */\n    colSpan?: number;\n    /**\n     * 日期格式，`type=date` 有效，（默认：YYYY-MM-DD HH:mm）\n     */\n    dateFormat?: string;\n    /**\n     * 真值条件，`type=yn` 有效，（默认：`true`）\n     */\n    ynTruth?: any;\n    /**\n     * 徽章 `true` 时文本，`type=yn` 有效，（默认：是）\n     */\n    ynYes?: string;\n    /**\n     * 徽章 `false` 时文本，`type=yn` 有效，（默认：否）\n     */\n    ynNo?: string;\n    /**\n     * 是否允许导出，默认 `true`\n     */\n    exported?: boolean;\n    /** 权限，等同 `can()` 参数值 */\n    acl?: ACLCanType;\n\n    [key: string]: any;\n}\n\n/**\n * 选择功能配置\n */\nexport interface SimpleTableSelection {\n    /**\n     * 选择项显示的文字\n     */\n    text: string;\n    /**\n     * 选择项点击回调\n     */\n    select: Function;\n    /** 权限，等同 `can()` 参数值 */\n    acl?: ACLCanType;\n}\n\n/**\n * 过滤项配置\n */\nexport interface SimpleTableFilter {\n    /**\n     * 文本\n     */\n    text: string;\n    /**\n     * 值\n     */\n    value?: any;\n    /**\n     * 是否选中\n     */\n    checked?: boolean;\n    /** 权限，等同 `can()` 参数值 */\n    acl?: ACLCanType;\n\n    [key: string]: any;\n}\n\n/**\n * 按钮配置\n */\nexport interface SimpleTableButton {\n    /**\n     * 文本\n     */\n    text: string;\n    /**\n     * 文本 i18n\n     */\n    i18n?: string;\n    /**\n     * 格式化文本\n     */\n    format?: (record: any, btn: SimpleTableButton) => string;\n    /**\n     * 按钮类型\n     * - `none` 无任何互动\n     * - `del` 删除，默认开启 `pop: true`\n     * - `modal` 对话框，需要指定 `component` 才会生效\n     * - `static` 静态对话框，需要指定 `component` 才会生效\n     */\n    type?: 'none' | 'del' | 'modal' | 'static';\n    /**\n     * 点击回调\n     * - `type=对话框` 只会在 `确认` 时触发\n     * - `type=对话框` 时才会返回 `modal` 所携带参数\n     */\n    click?: (record: any, modal?: any) => void;\n    /**\n     * 是否需要气泡确认框\n     */\n    pop?: boolean;\n    /**\n     * 气泡确认框内容，默认 `确认删除吗？`\n     */\n    popTitle?: string;\n    /**\n     * 对话框组件对象，务必在 `entryComponents` 注册\n     */\n    component?: any;\n    /**\n     * 对话框参数\n     */\n    params?: (record: any) => Object;\n    /**\n     * 对话框大小，默认：`lg`\n     */\n    size?: 'sm' | 'lg' | '' | number;\n    /**\n     * 对话框额外参数，见 [ModalHelper](http://ng-alain.com/docs/service#ModalHelper)\n     */\n    modalOptions?: any;\n    /**\n     * 下拉菜单，当存在时以 `dropdown` 形式渲染\n     * - 只支持一级\n     */\n    children?: SimpleTableButton[];\n    /** 权限，等同 `can()` 参数值 */\n    acl?: ACLCanType;\n\n    [key: string]: any;\n}\n\n/**\n * 回调数据\n */\nexport interface SimpleTableChange {\n    /**\n     * 回调类型\n     */\n    type: 'pi' | 'ps';\n    /**\n     * 当前页码\n     */\n    pi: number;\n    /**\n     * 每页数量\n     */\n    ps: number;\n    /**\n     * 数据总量\n     */\n    total: number;\n}\n\nexport interface STExportOptions {\n    /** @private */\n    _d: any[];\n    /** @private */\n    _c: SimpleTableColumn[];\n    /** 工作溥名 */\n    sheetname?: string;\n    /** 文件名 */\n    filename?: string;\n    /** triggers when saveas */\n    callback?: (wb: any) => void;\n}\n"]}