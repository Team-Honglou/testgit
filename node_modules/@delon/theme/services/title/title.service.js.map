{"version":3,"file":"title.service.js","sourceRoot":"","sources":["../../../../.ng_build/theme/services/title/title.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable, Inject, Optional } from '@angular/core';\r\nimport { Title, DOCUMENT } from '@angular/platform-browser';\r\nimport { MenuService } from '../menu/menu.service';\r\nimport { ALAIN_I18N_TOKEN, AlainI18NService } from '../i18n/i18n';\r\n\r\n/**\r\n * 设置标题（用法见 AppComponent）\r\n * 标题获取的优先级为：route（支持i18n） > html\r\n *  + 路由：配置标准的方法见 `./routes/routes.ts` 路由配置节点中 `data` 属性，允许设置：`translate` 或 `title` 两个参数，前者 i18n.\r\n *  + html：若不指定则从 `content__title` 中获取 `h1` 内容\r\n */\r\n@Injectable()\r\nexport class TitleService {\r\n    constructor(\r\n        private title: Title,\r\n        private menuSrv: MenuService,\r\n        @Optional() @Inject(ALAIN_I18N_TOKEN) private translatorSrv: AlainI18NService,\r\n        @Inject(DOCUMENT) private doc: any) { }\r\n\r\n    private _prefix = '';\r\n    private _suffix = '';\r\n    private _separator = ' - ';\r\n    private _reverse = false;\r\n\r\n    /** 设置分隔符 */\r\n    set separator(value: string) {\r\n        this._separator = value;\r\n    }\r\n\r\n    /** 设置前缀 */\r\n    set prefix(value: string) {\r\n        this._prefix = value;\r\n    }\r\n\r\n    /** 设置后缀 */\r\n    set suffix(value: string) {\r\n        this._suffix = value;\r\n    }\r\n\r\n    /** 设置是否反转 */\r\n    set reverse(value: boolean) {\r\n        this._reverse = value;\r\n    }\r\n\r\n    private getByElement(): string {\r\n        const el = this.doc.querySelector('.content__title h1');\r\n        if (el) {\r\n            return el.firstChild.textContent.trim();\r\n        }\r\n        return '';\r\n    }\r\n\r\n    /**\r\n     * 设置标题\r\n     * 若不指定则从 `content__title` 中获取 `h1` 内容\r\n     */\r\n    setTitle(title?: string | string[]) {\r\n        if (!title) {\r\n            title = this.getByElement();\r\n        }\r\n        if (title && !Array.isArray(title)) {\r\n            title = [ title ];\r\n        }\r\n\r\n        let newTitles = [];\r\n        if (this._prefix) {\r\n            newTitles.push(this._prefix);\r\n        }\r\n        if (title && title.length > 0) {\r\n            newTitles.push(...(title as string[]));\r\n        }\r\n        if (this._suffix) {\r\n            newTitles.push(this._suffix);\r\n        }\r\n        if (this._reverse) {\r\n            newTitles = newTitles.reverse();\r\n        }\r\n        this.title.setTitle(newTitles.join(this._separator));\r\n    }\r\n\r\n    /**\r\n     * 根据URL地址从 `MenuService` 中获取对应的标题\r\n     */\r\n    setTitleByUrl(url: string) {\r\n        const menus = this.menuSrv.getPathByUrl(url);\r\n        if (!menus || menus.length <= 0) {\r\n            this.setTitle();\r\n            return;\r\n        }\r\n\r\n        const item = menus[menus.length - 1];\r\n        let title;\r\n        if (item.translate && this.translatorSrv) title = this.translatorSrv.fanyi(item.translate);\r\n        this.setTitle(title || item.text);\r\n    }\r\n}\r\n"]}