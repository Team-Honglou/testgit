{"version":3,"file":"count-down.component.js","sourceRoot":"","sources":["../../../.ng_build/abc/count-down/count-down.component.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,eAAe,CAAC;AACvE,OAAO,KAAK,MAAM,MAAM,QAAQ,CAAC;;;qBA2BX,IAAI,YAAY,EAAE;sBACjB,IAAI,YAAY,EAAU;mBAC7B,IAAI,YAAY,EAAE;;0BAT9B,sCAAM;;;;kBAAC,KAAoB;YAC3B,IAAI,CAAC,MAAM,GAAG;gBACV,QAAQ,EAAE,gBAAgB;gBAC1B,QAAQ,EAAE,OAAO,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC,MAAM,EAAE,CAAC,GAAG,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE;aACrG,CAAC;;;;;IAON,mCAAM,GAAN;QACI,IAAI,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC;KACrB;IAED,oCAAO,GAAP,UAAQ,IAAY;QAChB,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;KAC1B;IAED,sCAAS,GAAT;QACI,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;KACnB;;gBAvCJ,SAAS,SAAC;oBACP,QAAQ,EAAE,YAAY;oBACtB,QAAQ,EAAE,kLAKT;oBACD,SAAS,EAAE,CAAE,kBAAkB,CAAE;iBACpC;;;;;2BAGI,KAAK;2BAKL,KAAK;0BAQL,MAAM;2BACN,MAAM;wBACN,MAAM;;6BA9BX;;SAaa,kBAAkB","sourcesContent":["import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport * as moment from 'moment';\r\n\r\n@Component({\r\n    selector: 'count-down',\r\n    template: `\r\n    <countdown *ngIf=\"config\" [config]=\"config\"\r\n        (start)=\"_start()\"\r\n        (finished)=\"_finished()\"\r\n        (notify)=\"_notify($event)\"></countdown>\r\n    `,\r\n    styleUrls: [ './count-down.css' ]\r\n})\r\nexport class CountDownComponent {\r\n\r\n    @Input() config: any;\r\n\r\n    /**\r\n     * 目标时间\r\n     */\r\n    @Input()\r\n    set target(value: number | Date) {\r\n        this.config = {\r\n            template: `$!h!:$!m!:$!s!`,\r\n            stopTime: typeof value === 'number' ? moment().add(value, 's').valueOf() : moment(value).valueOf()\r\n        };\r\n    }\r\n\r\n    @Output() begin = new EventEmitter();\r\n    @Output() notify = new EventEmitter<number>();\r\n    @Output() end = new EventEmitter();\r\n\r\n    _start() {\r\n        this.begin.emit();\r\n    }\r\n\r\n    _notify(time: number) {\r\n        this.notify.emit(time);\r\n    }\r\n\r\n    _finished() {\r\n        this.end.emit();\r\n    }\r\n}\r\n"]}