import { Component, Input, ElementRef, TemplateRef, ContentChild, Inject, Renderer2 } from '@angular/core';
import { Router } from '@angular/router';
import { coerceBooleanProperty } from '@angular/cdk/coercion';
import { MenuService, ALAIN_I18N_TOKEN } from '@delon/theme';
var ProHeaderComponent = /** @class */ (function () {
    // endregion
    function ProHeaderComponent(route, menuSrv, i18nSrv, el, renderer) {
        this.route = route;
        this.menuSrv = menuSrv;
        this.i18nSrv = i18nSrv;
        this.el = el;
        this.renderer = renderer;
        this._autoBreadcrumb = true;
        this.paths = [];
    }
    Object.defineProperty(ProHeaderComponent.prototype, "autoBreadcrumb", {
        get: /**
             * 自动生成导航，以当前路由从主菜单中定位
             */
        function () { return this._autoBreadcrumb; },
        set: function (value) {
            this._autoBreadcrumb = coerceBooleanProperty(value);
        },
        enumerable: true,
        configurable: true
    });
    ProHeaderComponent.prototype.genBreadcrumb = function () {
        var _this = this;
        if (this.breadcrumb || !this.autoBreadcrumb)
            return;
        var menus = this.menuSrv.getPathByUrl(this.route.url);
        if (menus.length <= 0)
            return;
        var paths = [];
        menus.forEach(function (item) {
            var title;
            if (item.translate)
                title = _this.i18nSrv.fanyi(item.translate);
            paths.push({ title: title || item.text, link: item.link && [item.link] });
        });
        // add home
        paths.splice(0, 0, {
            title: this.i18nSrv.fanyi('home') || 'Home',
            link: ['/']
        });
        this.paths = paths;
    };
    ProHeaderComponent.prototype.ngOnInit = function () {
        this.el.nativeElement.classList.add('content__title', 'pro-header');
        this.genBreadcrumb();
    };
    ProHeaderComponent.decorators = [
        { type: Component, args: [{
                    selector: 'pro-header',
                    template: "\n    <ng-container *ngIf=\"!breadcrumb; else breadcrumb\">\n        <nz-breadcrumb>\n            <nz-breadcrumb-item *ngFor=\"let i of paths\">\n                <ng-container *ngIf=\"i.link\"><a [routerLink]=\"i.link\">{{i.title}}</a></ng-container>\n                <ng-container *ngIf=\"!i.link\">{{i.title}}</ng-container>\n            </nz-breadcrumb-item>\n        </nz-breadcrumb>\n    </ng-container>\n    <div class=\"detail\">\n        <div *ngIf=\"logo\" class=\"logo\"><ng-template [ngTemplateOutlet]=\"logo\"></ng-template></div>\n        <div class=\"main\">\n            <div class=\"row\">\n                <h1 *ngIf=\"title\" class=\"title\">{{title}}</h1>\n                <div *ngIf=\"action\" class=\"action\"><ng-template [ngTemplateOutlet]=\"action\"></ng-template></div>\n            </div>\n            <div class=\"row\">\n                <div *ngIf=\"content\" class=\"desc\"><ng-template [ngTemplateOutlet]=\"content\"></ng-template></div>\n                <div *ngIf=\"extra\" class=\"extra\"><ng-template [ngTemplateOutlet]=\"extra\"></ng-template></div>\n            </div>\n        </div>\n    </div>\n    <ng-content></ng-content>\n    <ng-template [ngTemplateOutlet]=\"tab\"></ng-template>\n    ",
                    styles: ["/* stylelint-disable at-rule-empty-line-before,at-rule-name-space-after,at-rule-no-unknown */ /* stylelint-disable declaration-bang-space-before */ /* stylelint-disable declaration-bang-space-before */ :host { display: block; background: #fff; padding-top: 16px; padding-bottom: 0; border-bottom-color: #e9e9e9; color: rgba(0, 0, 0, 0.65); } :host ::ng-deep .detail { display: flex; } :host ::ng-deep .row { display: flex; } :host ::ng-deep .ant-breadcrumb { margin-bottom: 16px; } :host ::ng-deep .ant-breadcrumb > nz-breadcrumb-item:last-child { font-weight: normal; } :host ::ng-deep .tabs { margin: 0 0 -17px -8px; } :host ::ng-deep .tabs .ant-tabs-bar { border-bottom: 1px solid #e9e9e9; } :host ::ng-deep .logo { flex: 0 1 auto; margin-right: 16px; padding-top: 1px; } :host ::ng-deep .logo > img { width: 28px; height: 28px; border-radius: 4px; display: block; } :host ::ng-deep .title { font-size: 20px; font-weight: 500; color: rgba(0, 0, 0, 0.85); } :host ::ng-deep .action { margin-left: 56px; min-width: 266px; } :host ::ng-deep .action .ant-btn-group:not(:last-child), :host ::ng-deep .action .ant-btn:not(:last-child) { margin-right: 8px; } :host ::ng-deep .action .ant-btn-group > .ant-btn { margin-right: 0; } :host ::ng-deep .title, :host ::ng-deep .action, :host ::ng-deep .desc, :host ::ng-deep .extra, :host ::ng-deep .main { flex: auto; } :host ::ng-deep .title, :host ::ng-deep .action { margin-bottom: 16px; } :host ::ng-deep .logo, :host ::ng-deep .desc, :host ::ng-deep .extra { margin-bottom: 16px; } :host ::ng-deep .action, :host ::ng-deep .extra { text-align: right; } :host ::ng-deep .extra { margin-left: 88px; min-width: 242px; } :host ::ng-deep .ant-tabs-bar { margin-bottom: 1px; border-bottom: none; } @media screen and (max-width: 1600px) { :host ::ng-deep .extra { margin-left: 44px; } } @media screen and (max-width: 1200px) { :host ::ng-deep .extra { margin-left: 20px; } } @media screen and (max-width: 992px) { :host ::ng-deep .row { display: block; } :host ::ng-deep .action, :host ::ng-deep .extra { margin-left: 0; text-align: left; } } @media screen and (max-width: 768px) { :host ::ng-deep .detail { display: block; } } @media screen and (max-width: 480px) { :host ::ng-deep .action .ant-btn-group, :host ::ng-deep .action .ant-btn { display: block; margin-bottom: 8px; } :host ::ng-deep .action .ant-btn-group > .ant-btn { display: inline-block; margin-bottom: 0; } } "]
                },] },
    ];
    /** @nocollapse */
    ProHeaderComponent.ctorParameters = function () { return [
        { type: Router, },
        { type: MenuService, },
        { type: undefined, decorators: [{ type: Inject, args: [ALAIN_I18N_TOKEN,] },] },
        { type: ElementRef, },
        { type: Renderer2, },
    ]; };
    ProHeaderComponent.propDecorators = {
        "title": [{ type: Input },],
        "autoBreadcrumb": [{ type: Input },],
        "breadcrumb": [{ type: ContentChild, args: ['breadcrumb',] },],
        "logo": [{ type: ContentChild, args: ['logo',] },],
        "action": [{ type: ContentChild, args: ['action',] },],
        "content": [{ type: ContentChild, args: ['content',] },],
        "extra": [{ type: ContentChild, args: ['extra',] },],
        "tab": [{ type: ContentChild, args: ['tab',] },],
    };
    return ProHeaderComponent;
}());
export { ProHeaderComponent };
//# sourceMappingURL=pro-header.component.js.map