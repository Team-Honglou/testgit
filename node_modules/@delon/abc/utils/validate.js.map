{"version":3,"file":"validate.js","sourceRoot":"","sources":["../../../.ng_build/abc/utils/validate.ts"],"names":[],"mappings":";AACA;AAAA;;;IACI,YAAY;;IACL,cAAK;IAAZ,UAAa,KAAsB;QAC/B,MAAM,CAAC,oCAAoC,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;KACtE;IAED,YAAY;;IACL,cAAK;IAAZ,UAAa,KAAsB;;QAE/B,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,QAAQ,CAAC,KAAK,CAAC,QAAQ,EAAE,EAAE,EAAE,CAAC,IAAI,KAAK,CAAC;KAC3E;IAED,YAAY;;IACL,kBAAS;IAAhB,UAAiB,KAAsB;QACnC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;KAC1D;IAED,aAAa;;IACN,iBAAQ;IAAf,UAAgB,KAAU;QACtB,MAAM,CAAC,OAAM,CAAC,KAAK,CAAC,KAAK,QAAQ,IAAI,iCAAiC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KACtF;IAED,aAAa;;IACN,iBAAQ;IAAf,UAAgB,KAAU;QACtB,MAAM,CAAC,OAAM,CAAC,KAAK,CAAC,KAAK,QAAQ,IAAI,qEAAqE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;KAC1H;mBA1BL;IA2BC,CAAA;;AA1BD,oBA0BC","sourcesContent":["/** 一套日常验证类 */\r\nexport class Validate {\r\n    /** 是否为数字 */\r\n    static isNum(value: string | number): boolean {\r\n        return /^((-?\\d+\\.\\d+)|(-?\\d+)|(-?\\.\\d+))$/.test(value.toString());\r\n    }\r\n\r\n    /** 是否为整数 */\r\n    static isInt(value: string | number): boolean {\r\n        // tslint:disable-next-line:triple-equals\r\n        return Validate.isNum(value) && parseInt(value.toString(), 10) == value;\r\n    }\r\n\r\n    /** 是否为小数 */\r\n    static isDecimal(value: string | number): boolean {\r\n        return Validate.isNum(value) && !Validate.isInt(value);\r\n    }\r\n\r\n    /** 是否为身份证 */\r\n    static isIdCard(value: any): boolean {\r\n        return typeof(value) === 'string' && /(^\\d{15}$)|(^\\d{17}([0-9]|X)$)/i.test(value);\r\n    }\r\n\r\n    /** 是否为手机号 */\r\n    static isMobile(value: any): boolean {\r\n        return typeof(value) === 'string' && /^(0|\\+?86|17951)?(13[0-9]|15[0-9]|17[0678]|18[0-9]|14[57])[0-9]{8}$/.test(value);\r\n    }\r\n}\r\n"]}