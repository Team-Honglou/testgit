{"version":3,"file":"acl.directive.js","sourceRoot":"","sources":["../../../.ng_build/acl/directives/acl.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,KAAK,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,eAAe,CAAC;AACxE,OAAO,EAAE,UAAU,EAAE,MAAM,yBAAyB,CAAC;;IA+BjD,sBAAoB,EAAc,EAAU,QAAmB,EAAU,GAAe;QAApE,OAAE,GAAF,EAAE,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAW;QAAU,QAAG,GAAH,GAAG,CAAY;KAAI;0BAtBxF,6BAAG;uBAAC,KAAsD;YAC1D,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;;;;;0BAIhB,iCAAO;uBAAC,OAAwB;YAChC,IAAI,CAAC,GAAG,CAAU;gBACd,OAAO,EAAE,CAAC,OAAO,CAAC;gBAClB,IAAI,EAAE,IAAI;aACb,CAAC,CAAC;;;;;IAGC,0BAAG,GAAX,UAAY,KAAsD;QAC9D,IAAM,GAAG,GAAG,WAAW,CAAC;QACxB,IAAM,EAAE,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC;QACjC,EAAE,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;YACtB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;SACtC;QAAC,IAAI,CAAC,CAAC;YACJ,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC;SACnC;KACJ;;gBA1BJ,SAAS,SAAC;oBACP,QAAQ,EAAE,OAAO;iBACpB;;;;gBAN0B,UAAU;gBAAE,SAAS;gBACvC,UAAU;;;wBAQd,KAAK,SAAC,KAAK;4BAKX,KAAK,SAAC,aAAa;;uBAdxB;;SAOa,YAAY","sourcesContent":["import { Directive, Input, ElementRef, Renderer2 } from '@angular/core';\r\nimport { ACLService } from '../services/acl.service';\r\nimport { ACLType } from '../services/acl.type';\r\n\r\n@Directive({\r\n    selector: '[acl]'\r\n})\r\nexport class ACLDirective {\r\n\r\n    @Input('acl')\r\n    set acl(value: number | number[] | string | string[] | ACLType) {\r\n        this.set(value);\r\n    }\r\n\r\n    @Input('acl-ability')\r\n    set ability(ability: number | string) {\r\n        this.set(<ACLType>{\r\n            ability: [ability],\r\n            role: null\r\n        });\r\n    }\r\n\r\n    private set(value: number | number[] | string | string[] | ACLType) {\r\n        const CLS = 'acl__hide';\r\n        const el = this.el.nativeElement;\r\n        if (this.srv.can(value)) {\r\n            this.renderer.removeClass(el, CLS);\r\n        } else {\r\n            this.renderer.addClass(el, CLS);\r\n        }\r\n    }\r\n\r\n    constructor(private el: ElementRef, private renderer: Renderer2, private srv: ACLService) {}\r\n}\r\n"]}