var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
import { Pipe } from '@angular/core';
import { CurrencyPipe } from '@angular/common';
/**
 * 内置 `_currency` 货币格式化
 * 简化原 `currency` 针对中文货币格式化问题
 * 别忘记在根模块中注册语言环境：
 *
 * ```typescript
 * import { registerLocaleData } from '@angular/common';
 * import localeZhHans from '@angular/common/locales/zh-Hans';
 * registerLocaleData(localeZhHans);
 * ```
 */
var CNCurrencyPipe = /** @class */ (function (_super) {
    __extends(CNCurrencyPipe, _super);
    function CNCurrencyPipe() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CNCurrencyPipe.prototype.transform = function (value, currencyCode, display, digits) {
        if (currencyCode === void 0) { currencyCode = '￥'; }
        if (display === void 0) { display = 'code'; }
        return _super.prototype.transform.call(this, value, currencyCode, display, digits);
    };
    CNCurrencyPipe.decorators = [
        { type: Pipe, args: [{ name: '_currency' },] },
    ];
    /** @nocollapse */
    CNCurrencyPipe.ctorParameters = function () { return []; };
    return CNCurrencyPipe;
}(CurrencyPipe));
export { CNCurrencyPipe };
//# sourceMappingURL=cn-currency.pipe.js.map